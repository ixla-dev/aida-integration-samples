/*
 * aida-mini
 *
 * 1.0.522
 *
 * The version of the OpenAPI document: 1.0.522
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Aida.Sdk.Mini.Api;
using Aida.Sdk.Mini.Model;
using Aida.Sdk.Mini.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Aida.Sdk.Mini.Test.Model
{
    /// <summary>
    ///  Class for testing ParameterInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ParameterInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ParameterInfo
        //private ParameterInfo instance;

        public ParameterInfoTests()
        {
            // TODO uncomment below to create an instance of ParameterInfo
            //instance = new ParameterInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ParameterInfo
        /// </summary>
        [Fact]
        public void ParameterInfoInstanceTest()
        {
            // TODO uncomment below to test "IsType" ParameterInfo
            //Assert.IsType<ParameterInfo>(instance);
        }


        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }
        /// <summary>
        /// Test the property 'Member'
        /// </summary>
        [Fact]
        public void MemberTest()
        {
            // TODO unit test for the property 'Member'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'ParameterType'
        /// </summary>
        [Fact]
        public void ParameterTypeTest()
        {
            // TODO unit test for the property 'ParameterType'
        }
        /// <summary>
        /// Test the property 'Position'
        /// </summary>
        [Fact]
        public void PositionTest()
        {
            // TODO unit test for the property 'Position'
        }
        /// <summary>
        /// Test the property 'IsIn'
        /// </summary>
        [Fact]
        public void IsInTest()
        {
            // TODO unit test for the property 'IsIn'
        }
        /// <summary>
        /// Test the property 'IsLcid'
        /// </summary>
        [Fact]
        public void IsLcidTest()
        {
            // TODO unit test for the property 'IsLcid'
        }
        /// <summary>
        /// Test the property 'IsOptional'
        /// </summary>
        [Fact]
        public void IsOptionalTest()
        {
            // TODO unit test for the property 'IsOptional'
        }
        /// <summary>
        /// Test the property 'IsOut'
        /// </summary>
        [Fact]
        public void IsOutTest()
        {
            // TODO unit test for the property 'IsOut'
        }
        /// <summary>
        /// Test the property 'IsRetval'
        /// </summary>
        [Fact]
        public void IsRetvalTest()
        {
            // TODO unit test for the property 'IsRetval'
        }
        /// <summary>
        /// Test the property 'DefaultValue'
        /// </summary>
        [Fact]
        public void DefaultValueTest()
        {
            // TODO unit test for the property 'DefaultValue'
        }
        /// <summary>
        /// Test the property 'RawDefaultValue'
        /// </summary>
        [Fact]
        public void RawDefaultValueTest()
        {
            // TODO unit test for the property 'RawDefaultValue'
        }
        /// <summary>
        /// Test the property 'HasDefaultValue'
        /// </summary>
        [Fact]
        public void HasDefaultValueTest()
        {
            // TODO unit test for the property 'HasDefaultValue'
        }
        /// <summary>
        /// Test the property 'CustomAttributes'
        /// </summary>
        [Fact]
        public void CustomAttributesTest()
        {
            // TODO unit test for the property 'CustomAttributes'
        }
        /// <summary>
        /// Test the property 'MetadataToken'
        /// </summary>
        [Fact]
        public void MetadataTokenTest()
        {
            // TODO unit test for the property 'MetadataToken'
        }

    }

}
