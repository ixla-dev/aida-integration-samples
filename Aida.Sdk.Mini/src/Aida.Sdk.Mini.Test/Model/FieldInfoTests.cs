/*
 * aida-mini
 *
 * 1.0.522
 *
 * The version of the OpenAPI document: 1.0.522
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Aida.Sdk.Mini.Api;
using Aida.Sdk.Mini.Model;
using Aida.Sdk.Mini.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Aida.Sdk.Mini.Test.Model
{
    /// <summary>
    ///  Class for testing FieldInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FieldInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FieldInfo
        //private FieldInfo instance;

        public FieldInfoTests()
        {
            // TODO uncomment below to create an instance of FieldInfo
            //instance = new FieldInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FieldInfo
        /// </summary>
        [Fact]
        public void FieldInfoInstanceTest()
        {
            // TODO uncomment below to test "IsType" FieldInfo
            //Assert.IsType<FieldInfo>(instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'DeclaringType'
        /// </summary>
        [Fact]
        public void DeclaringTypeTest()
        {
            // TODO unit test for the property 'DeclaringType'
        }
        /// <summary>
        /// Test the property 'ReflectedType'
        /// </summary>
        [Fact]
        public void ReflectedTypeTest()
        {
            // TODO unit test for the property 'ReflectedType'
        }
        /// <summary>
        /// Test the property 'Module'
        /// </summary>
        [Fact]
        public void ModuleTest()
        {
            // TODO unit test for the property 'Module'
        }
        /// <summary>
        /// Test the property 'CustomAttributes'
        /// </summary>
        [Fact]
        public void CustomAttributesTest()
        {
            // TODO unit test for the property 'CustomAttributes'
        }
        /// <summary>
        /// Test the property 'IsCollectible'
        /// </summary>
        [Fact]
        public void IsCollectibleTest()
        {
            // TODO unit test for the property 'IsCollectible'
        }
        /// <summary>
        /// Test the property 'MetadataToken'
        /// </summary>
        [Fact]
        public void MetadataTokenTest()
        {
            // TODO unit test for the property 'MetadataToken'
        }
        /// <summary>
        /// Test the property 'MemberType'
        /// </summary>
        [Fact]
        public void MemberTypeTest()
        {
            // TODO unit test for the property 'MemberType'
        }
        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }
        /// <summary>
        /// Test the property 'FieldType'
        /// </summary>
        [Fact]
        public void FieldTypeTest()
        {
            // TODO unit test for the property 'FieldType'
        }
        /// <summary>
        /// Test the property 'IsInitOnly'
        /// </summary>
        [Fact]
        public void IsInitOnlyTest()
        {
            // TODO unit test for the property 'IsInitOnly'
        }
        /// <summary>
        /// Test the property 'IsLiteral'
        /// </summary>
        [Fact]
        public void IsLiteralTest()
        {
            // TODO unit test for the property 'IsLiteral'
        }
        /// <summary>
        /// Test the property 'IsNotSerialized'
        /// </summary>
        [Fact]
        public void IsNotSerializedTest()
        {
            // TODO unit test for the property 'IsNotSerialized'
        }
        /// <summary>
        /// Test the property 'IsPinvokeImpl'
        /// </summary>
        [Fact]
        public void IsPinvokeImplTest()
        {
            // TODO unit test for the property 'IsPinvokeImpl'
        }
        /// <summary>
        /// Test the property 'IsSpecialName'
        /// </summary>
        [Fact]
        public void IsSpecialNameTest()
        {
            // TODO unit test for the property 'IsSpecialName'
        }
        /// <summary>
        /// Test the property 'IsStatic'
        /// </summary>
        [Fact]
        public void IsStaticTest()
        {
            // TODO unit test for the property 'IsStatic'
        }
        /// <summary>
        /// Test the property 'IsAssembly'
        /// </summary>
        [Fact]
        public void IsAssemblyTest()
        {
            // TODO unit test for the property 'IsAssembly'
        }
        /// <summary>
        /// Test the property 'IsFamily'
        /// </summary>
        [Fact]
        public void IsFamilyTest()
        {
            // TODO unit test for the property 'IsFamily'
        }
        /// <summary>
        /// Test the property 'IsFamilyAndAssembly'
        /// </summary>
        [Fact]
        public void IsFamilyAndAssemblyTest()
        {
            // TODO unit test for the property 'IsFamilyAndAssembly'
        }
        /// <summary>
        /// Test the property 'IsFamilyOrAssembly'
        /// </summary>
        [Fact]
        public void IsFamilyOrAssemblyTest()
        {
            // TODO unit test for the property 'IsFamilyOrAssembly'
        }
        /// <summary>
        /// Test the property 'IsPrivate'
        /// </summary>
        [Fact]
        public void IsPrivateTest()
        {
            // TODO unit test for the property 'IsPrivate'
        }
        /// <summary>
        /// Test the property 'IsPublic'
        /// </summary>
        [Fact]
        public void IsPublicTest()
        {
            // TODO unit test for the property 'IsPublic'
        }
        /// <summary>
        /// Test the property 'IsSecurityCritical'
        /// </summary>
        [Fact]
        public void IsSecurityCriticalTest()
        {
            // TODO unit test for the property 'IsSecurityCritical'
        }
        /// <summary>
        /// Test the property 'IsSecuritySafeCritical'
        /// </summary>
        [Fact]
        public void IsSecuritySafeCriticalTest()
        {
            // TODO unit test for the property 'IsSecuritySafeCritical'
        }
        /// <summary>
        /// Test the property 'IsSecurityTransparent'
        /// </summary>
        [Fact]
        public void IsSecurityTransparentTest()
        {
            // TODO unit test for the property 'IsSecurityTransparent'
        }
        /// <summary>
        /// Test the property 'FieldHandle'
        /// </summary>
        [Fact]
        public void FieldHandleTest()
        {
            // TODO unit test for the property 'FieldHandle'
        }

    }

}
