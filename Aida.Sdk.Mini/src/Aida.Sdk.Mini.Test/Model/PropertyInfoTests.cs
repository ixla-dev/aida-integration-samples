/*
 * aida-mini
 *
 * 1.0.522
 *
 * The version of the OpenAPI document: 1.0.522
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Aida.Sdk.Mini.Api;
using Aida.Sdk.Mini.Model;
using Aida.Sdk.Mini.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Aida.Sdk.Mini.Test.Model
{
    /// <summary>
    ///  Class for testing PropertyInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PropertyInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PropertyInfo
        //private PropertyInfo instance;

        public PropertyInfoTests()
        {
            // TODO uncomment below to create an instance of PropertyInfo
            //instance = new PropertyInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PropertyInfo
        /// </summary>
        [Fact]
        public void PropertyInfoInstanceTest()
        {
            // TODO uncomment below to test "IsType" PropertyInfo
            //Assert.IsType<PropertyInfo>(instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'DeclaringType'
        /// </summary>
        [Fact]
        public void DeclaringTypeTest()
        {
            // TODO unit test for the property 'DeclaringType'
        }
        /// <summary>
        /// Test the property 'ReflectedType'
        /// </summary>
        [Fact]
        public void ReflectedTypeTest()
        {
            // TODO unit test for the property 'ReflectedType'
        }
        /// <summary>
        /// Test the property 'Module'
        /// </summary>
        [Fact]
        public void ModuleTest()
        {
            // TODO unit test for the property 'Module'
        }
        /// <summary>
        /// Test the property 'CustomAttributes'
        /// </summary>
        [Fact]
        public void CustomAttributesTest()
        {
            // TODO unit test for the property 'CustomAttributes'
        }
        /// <summary>
        /// Test the property 'IsCollectible'
        /// </summary>
        [Fact]
        public void IsCollectibleTest()
        {
            // TODO unit test for the property 'IsCollectible'
        }
        /// <summary>
        /// Test the property 'MetadataToken'
        /// </summary>
        [Fact]
        public void MetadataTokenTest()
        {
            // TODO unit test for the property 'MetadataToken'
        }
        /// <summary>
        /// Test the property 'MemberType'
        /// </summary>
        [Fact]
        public void MemberTypeTest()
        {
            // TODO unit test for the property 'MemberType'
        }
        /// <summary>
        /// Test the property 'PropertyType'
        /// </summary>
        [Fact]
        public void PropertyTypeTest()
        {
            // TODO unit test for the property 'PropertyType'
        }
        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }
        /// <summary>
        /// Test the property 'IsSpecialName'
        /// </summary>
        [Fact]
        public void IsSpecialNameTest()
        {
            // TODO unit test for the property 'IsSpecialName'
        }
        /// <summary>
        /// Test the property 'CanRead'
        /// </summary>
        [Fact]
        public void CanReadTest()
        {
            // TODO unit test for the property 'CanRead'
        }
        /// <summary>
        /// Test the property 'CanWrite'
        /// </summary>
        [Fact]
        public void CanWriteTest()
        {
            // TODO unit test for the property 'CanWrite'
        }
        /// <summary>
        /// Test the property 'GetMethod'
        /// </summary>
        [Fact]
        public void GetMethodTest()
        {
            // TODO unit test for the property 'GetMethod'
        }
        /// <summary>
        /// Test the property 'SetMethod'
        /// </summary>
        [Fact]
        public void SetMethodTest()
        {
            // TODO unit test for the property 'SetMethod'
        }

    }

}
