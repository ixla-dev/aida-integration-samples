/*
 * aida-mini
 *
 * 1.0.522
 *
 * The version of the OpenAPI document: 1.0.522
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Aida.Sdk.Mini.Api;
using Aida.Sdk.Mini.Model;
using Aida.Sdk.Mini.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Aida.Sdk.Mini.Test.Model
{
    /// <summary>
    ///  Class for testing WorkflowInstance
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class WorkflowInstanceTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for WorkflowInstance
        //private WorkflowInstance instance;

        public WorkflowInstanceTests()
        {
            // TODO uncomment below to create an instance of WorkflowInstance
            //instance = new WorkflowInstance();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WorkflowInstance
        /// </summary>
        [Fact]
        public void WorkflowInstanceInstanceTest()
        {
            // TODO uncomment below to test "IsType" WorkflowInstance
            //Assert.IsType<WorkflowInstance>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'DefinitionId'
        /// </summary>
        [Fact]
        public void DefinitionIdTest()
        {
            // TODO unit test for the property 'DefinitionId'
        }
        /// <summary>
        /// Test the property 'DefinitionVersionId'
        /// </summary>
        [Fact]
        public void DefinitionVersionIdTest()
        {
            // TODO unit test for the property 'DefinitionVersionId'
        }
        /// <summary>
        /// Test the property 'TenantId'
        /// </summary>
        [Fact]
        public void TenantIdTest()
        {
            // TODO unit test for the property 'TenantId'
        }
        /// <summary>
        /// Test the property '_Version'
        /// </summary>
        [Fact]
        public void _VersionTest()
        {
            // TODO unit test for the property '_Version'
        }
        /// <summary>
        /// Test the property 'WorkflowStatus'
        /// </summary>
        [Fact]
        public void WorkflowStatusTest()
        {
            // TODO unit test for the property 'WorkflowStatus'
        }
        /// <summary>
        /// Test the property 'CorrelationId'
        /// </summary>
        [Fact]
        public void CorrelationIdTest()
        {
            // TODO unit test for the property 'CorrelationId'
        }
        /// <summary>
        /// Test the property 'ContextType'
        /// </summary>
        [Fact]
        public void ContextTypeTest()
        {
            // TODO unit test for the property 'ContextType'
        }
        /// <summary>
        /// Test the property 'ContextId'
        /// </summary>
        [Fact]
        public void ContextIdTest()
        {
            // TODO unit test for the property 'ContextId'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'LastExecutedAt'
        /// </summary>
        [Fact]
        public void LastExecutedAtTest()
        {
            // TODO unit test for the property 'LastExecutedAt'
        }
        /// <summary>
        /// Test the property 'FinishedAt'
        /// </summary>
        [Fact]
        public void FinishedAtTest()
        {
            // TODO unit test for the property 'FinishedAt'
        }
        /// <summary>
        /// Test the property 'CancelledAt'
        /// </summary>
        [Fact]
        public void CancelledAtTest()
        {
            // TODO unit test for the property 'CancelledAt'
        }
        /// <summary>
        /// Test the property 'FaultedAt'
        /// </summary>
        [Fact]
        public void FaultedAtTest()
        {
            // TODO unit test for the property 'FaultedAt'
        }
        /// <summary>
        /// Test the property 'Variables'
        /// </summary>
        [Fact]
        public void VariablesTest()
        {
            // TODO unit test for the property 'Variables'
        }
        /// <summary>
        /// Test the property 'Input'
        /// </summary>
        [Fact]
        public void InputTest()
        {
            // TODO unit test for the property 'Input'
        }
        /// <summary>
        /// Test the property 'Output'
        /// </summary>
        [Fact]
        public void OutputTest()
        {
            // TODO unit test for the property 'Output'
        }
        /// <summary>
        /// Test the property 'ActivityData'
        /// </summary>
        [Fact]
        public void ActivityDataTest()
        {
            // TODO unit test for the property 'ActivityData'
        }
        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Fact]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }
        /// <summary>
        /// Test the property 'BlockingActivities'
        /// </summary>
        [Fact]
        public void BlockingActivitiesTest()
        {
            // TODO unit test for the property 'BlockingActivities'
        }
        /// <summary>
        /// Test the property 'Fault'
        /// </summary>
        [Fact]
        public void FaultTest()
        {
            // TODO unit test for the property 'Fault'
        }
        /// <summary>
        /// Test the property 'Faults'
        /// </summary>
        [Fact]
        public void FaultsTest()
        {
            // TODO unit test for the property 'Faults'
        }
        /// <summary>
        /// Test the property 'ScheduledActivities'
        /// </summary>
        [Fact]
        public void ScheduledActivitiesTest()
        {
            // TODO unit test for the property 'ScheduledActivities'
        }
        /// <summary>
        /// Test the property 'Scopes'
        /// </summary>
        [Fact]
        public void ScopesTest()
        {
            // TODO unit test for the property 'Scopes'
        }
        /// <summary>
        /// Test the property 'CurrentActivity'
        /// </summary>
        [Fact]
        public void CurrentActivityTest()
        {
            // TODO unit test for the property 'CurrentActivity'
        }
        /// <summary>
        /// Test the property 'LastExecutedActivityId'
        /// </summary>
        [Fact]
        public void LastExecutedActivityIdTest()
        {
            // TODO unit test for the property 'LastExecutedActivityId'
        }

    }

}
