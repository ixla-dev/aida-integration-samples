/*
 * aida
 *
 * 1.0.722-rc.3+496a5e11f6297a76e2b83a2b26e743e21a1c18c1
 *
 * The version of the OpenAPI document: 1.0.722-rc.3+496a5e11f6297a76e2b83a2b26e743e21a1c18c1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Aida.Sdk.Client;
using Aida.Sdk.Api;
// uncomment below to import models
//using Aida.Sdk.Model;

namespace Aida.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing ToolBoxApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ToolBoxApiTests : IDisposable
    {
        private ToolBoxApi instance;

        public ToolBoxApiTests()
        {
            instance = new ToolBoxApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ToolBoxApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ToolBoxApi
            //Assert.IsType<ToolBoxApi>(instance);
        }

        /// <summary>
        /// Test LaserSightGrid
        /// </summary>
        [Fact]
        public void LaserSightGridTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scannerid = null;
            //var response = instance.LaserSightGrid(scannerid);
            //Assert.IsType<InkjetPrinterActionResult>(response);
        }

        /// <summary>
        /// Test PrintAndLaserCalibrationTemplate
        /// </summary>
        [Fact]
        public void PrintAndLaserCalibrationTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scannerid = null;
            //var response = instance.PrintAndLaserCalibrationTemplate(scannerid);
            //Assert.IsType<InkjetPrinterActionResult>(response);
        }

        /// <summary>
        /// Test PrintAndLaserSightGrid
        /// </summary>
        [Fact]
        public void PrintAndLaserSightGridTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scannerid = null;
            //var response = instance.PrintAndLaserSightGrid(scannerid);
            //Assert.IsType<InkjetPrinterActionResult>(response);
        }

        /// <summary>
        /// Test PrintSightGrid
        /// </summary>
        [Fact]
        public void PrintSightGridTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PrintSightGrid();
            //Assert.IsType<InkjetPrinterActionResult>(response);
        }
    }
}
