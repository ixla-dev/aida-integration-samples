{
  "openapi": "3.0.1",
  "info": {
    "title": "aida",
    "description": "1.0.685",
    "version": "1.0.685"
  },
  "paths": {
    "/aida/v1/application/settings": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Returns the configuration object currently used by the system",
        "operationId": "GetApplicationSettings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppConfig"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/application/settings/value": {
      "get": {
        "tags": [
          "Application"
        ],
        "operationId": "GetConfigValue",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/audit/job-templates": {
      "get": {
        "tags": [
          "Audit"
        ],
        "operationId": "GetJobTemplateAudit",
        "parameters": [
          {
            "name": "StartTimeStamp",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndTimeStamp",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "JobTemplateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Operation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "LayoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OcrName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AutoposName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WebhookName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobTemplateAuditEntryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobTemplateAuditEntryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobTemplateAuditEntryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/audit/workflows": {
      "get": {
        "tags": [
          "Audit"
        ],
        "operationId": "GetWorkflowAudit",
        "parameters": [
          {
            "name": "StartTimeStamp",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndTimeStamp",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "JobTemplateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WorkflowId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SessionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Operation",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "LayoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OcrName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AutoposName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WebhookName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourcePosition",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Position",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Success",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Result",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowAuditEntryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowAuditEntryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowAuditEntryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/auth/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "GetToken",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "type": "string"
                  },
                  "Password": {
                    "type": "string"
                  },
                  "ClientId": {
                    "type": "string"
                  },
                  "ClientSecret": {
                    "type": "string"
                  },
                  "grant_type": {
                    "type": "string",
                    "default": "password"
                  }
                }
              },
              "encoding": {
                "UserName": {
                  "style": "form"
                },
                "Password": {
                  "style": "form"
                },
                "ClientId": {
                  "style": "form"
                },
                "ClientSecret": {
                  "style": "form"
                },
                "grant_type": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "jwt token string",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "invalid credentials",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/auth/sing-out": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "LogOut",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Login",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserName": {
                    "type": "string"
                  },
                  "Password": {
                    "type": "string"
                  },
                  "ClientId": {
                    "type": "string"
                  },
                  "ClientSecret": {
                    "type": "string"
                  },
                  "redirectUrl": {
                    "type": "string",
                    "default": "/"
                  }
                }
              },
              "encoding": {
                "UserName": {
                  "style": "form"
                },
                "Password": {
                  "style": "form"
                },
                "ClientId": {
                  "style": "form"
                },
                "ClientSecret": {
                  "style": "form"
                },
                "redirectUrl": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/auth/user": {
      "get": {
        "tags": [
          "Auth"
        ],
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/auth/users": {
      "get": {
        "tags": [
          "Auth"
        ],
        "operationId": "FindUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AidaUserDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AidaUserDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AidaUserDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "CreateUser",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "roleName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "username": {
                  "style": "form"
                },
                "password": {
                  "style": "form"
                },
                "roleName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/auth/user-roles": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "AddUserRole",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "roleName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "username": {
                  "style": "form"
                },
                "roleName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/auth/api-keys": {
      "get": {
        "tags": [
          "Auth"
        ],
        "operationId": "FindApiKeys",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoSearchResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoSearchResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoSearchResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/autopos/{autoPosSettingsId}/execute": {
      "post": {
        "tags": [
          "AutoPos"
        ],
        "summary": "Run template matching and return the distance between the reference template and\r\nthe matched template (if any) in millimeters",
        "operationId": "GetOffset",
        "parameters": [
          {
            "name": "autoPosSettingsId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 0.8
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AutoPosResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoPosResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoPosResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/autopos/{id}/debug.jpg": {
      "get": {
        "tags": [
          "AutoPos"
        ],
        "summary": "Draws search area and best match rectangles on a camera frame and returns it as a jpeg image",
        "operationId": "AutoPosDebug",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 0.8
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/autopos/{id}/debug/live": {
      "get": {
        "tags": [
          "AutoPos"
        ],
        "summary": "Motion JPEG stream of the camera with XY Auto-Pos overlay",
        "operationId": "AutoPosDebugLive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 0.8
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/autopos/job/{jobTemplateId}/layout/{layoutId}/scanner/{scannerId}/debug/live/{cameraId}": {
      "get": {
        "tags": [
          "AutoPos"
        ],
        "summary": "Motion JPEG stream of the camera with XY Auto-Pos overlay",
        "operationId": "AutoPosConfigDebugLive",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layoutId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scannerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 0.8
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/autopos/{autoPosSettingsId}": {
      "delete": {
        "tags": [
          "AutoPos"
        ],
        "operationId": "DeleteJobTemplateLayoutAutoPosSettings",
        "parameters": [
          {
            "name": "autoPosSettingsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/autopos/template-matching-configuration/{templateMatchingConfigurationId}/debug/live": {
      "get": {
        "tags": [
          "AutoPos"
        ],
        "operationId": "TemplateMatchingDebugLive",
        "parameters": [
          {
            "name": "templateMatchingConfigurationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 0.8
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/autopos/template-matching-configuration/{templateMatchingConfigurationId}/debug/live.html": {
      "get": {
        "tags": [
          "AutoPos"
        ],
        "operationId": "TemplateMatchingConfigurationDebugLivePage",
        "parameters": [
          {
            "name": "templateMatchingConfigurationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "default": 0.8
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/autopos": {
      "post": {
        "tags": [
          "AutoPos"
        ],
        "summary": "Creates a new XY Auto-Position configuration",
        "operationId": "AddAutoPosSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AutoPos"
        ],
        "summary": "",
        "operationId": "UpdateAutoPosSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/autopos/template-matching-configuration/search": {
      "get": {
        "tags": [
          "AutoPos"
        ],
        "summary": "",
        "operationId": "FindTemplateMatchingConfigurations",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTemplateMatchingConfigurationsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTemplateMatchingConfigurationsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTemplateMatchingConfigurationsResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/autopos/template-matching-configuration/{id}": {
      "get": {
        "tags": [
          "AutoPos"
        ],
        "summary": "",
        "operationId": "GetTemplateMatchingConfigurationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AutoPos"
        ],
        "summary": "",
        "operationId": "DeleteTemplateMatchingConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/autopos/template-matching-configuration": {
      "post": {
        "tags": [
          "AutoPos"
        ],
        "summary": "",
        "operationId": "CreateTemplateMatchingConfiguration",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AutoPos"
        ],
        "summary": "",
        "operationId": "UpdateTemplateMatchingConfiguration",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/chipencoder/{jobTemplateId}/configuration": {
      "get": {
        "tags": [
          "ChipEncoder"
        ],
        "operationId": "GetChipConfiguration",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChipEncoder"
        ],
        "operationId": "RemoveChipEncodingConfiguration",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ChipEncoder"
        ],
        "operationId": "UpdateChipConfiguration",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/configuration/keys": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "operationId": "GetConfigurationKeys",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upload_config_file": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/database/purge-data": {
      "post": {
        "tags": [
          "Database"
        ],
        "operationId": "DeleteApplicationFilesAndData",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/database/database-migrate": {
      "post": {
        "tags": [
          "Database"
        ],
        "operationId": "MigrateDatabase",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/datasource-configuration": {
      "get": {
        "tags": [
          "DataSourceConfiguration"
        ],
        "operationId": "FindDataSourceConfigurations",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDataSourceConfigurationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDataSourceConfigurationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDataSourceConfigurationResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DataSourceConfiguration"
        ],
        "operationId": "AddDataSourceConfiguration",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataSourceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataSourceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataSourceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataSourceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/datasource-configuration/{id}": {
      "delete": {
        "tags": [
          "DataSourceConfiguration"
        ],
        "operationId": "DeleteDataSourceConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/datasource-configuration/npgsql": {
      "put": {
        "tags": [
          "DataSourceConfiguration"
        ],
        "operationId": "UpdateNpgSqlDataSourceConfiguration",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/datasource-configuration/mysql": {
      "put": {
        "tags": [
          "DataSourceConfiguration"
        ],
        "operationId": "UpdateMysqlDataSourceConfiguration",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/display-data/show-main-window": {
      "post": {
        "tags": [
          "Display"
        ],
        "operationId": "ShowMainWindow",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShowMainWindowParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShowMainWindowParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShowMainWindowParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShowMainWindowParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/display-data/show-reset-button": {
      "post": {
        "tags": [
          "Display"
        ],
        "operationId": "ShowResetWindow",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShowResetButtonParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShowResetButtonParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShowResetButtonParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShowResetButtonParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/display-data/show-error-window": {
      "post": {
        "tags": [
          "Display"
        ],
        "operationId": "ShowErrorWindow",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShowErrorWindowParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShowErrorWindowParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShowErrorWindowParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShowErrorWindowParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/display-data/send-data": {
      "post": {
        "tags": [
          "Display"
        ],
        "operationId": "SendData",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayActionResult"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/display-data/transportstatus": {
      "get": {
        "tags": [
          "DisplayData"
        ],
        "operationId": "TransportStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayTransportStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayTransportStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayTransportStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/display-data/laserstatus": {
      "get": {
        "tags": [
          "DisplayData"
        ],
        "operationId": "LaserStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayLaserStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayLaserStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayLaserStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/display-data/systemstatus": {
      "get": {
        "tags": [
          "DisplayData"
        ],
        "operationId": "SystemStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DisplaySystemStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplaySystemStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplaySystemStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/display-data/issuancestatus": {
      "get": {
        "tags": [
          "DisplayData"
        ],
        "operationId": "IssuanceStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayIssuanceStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayIssuanceStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayIssuanceStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/display-data/api-keys": {
      "post": {
        "tags": [
          "DisplayData"
        ],
        "operationId": "VerifyPin",
        "parameters": [
          {
            "name": "enteredPin",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/etl/{jobId}/entities": {
      "get": {
        "tags": [
          "Etl"
        ],
        "operationId": "GetEntityDescriptorsByJobTemplateId",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityDescriptor"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityDescriptor"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityDescriptor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/etl/{jobId}/exchange-table-ddl": {
      "get": {
        "tags": [
          "Etl"
        ],
        "operationId": "GetDataExchangeTableDefinition",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataExchangeTableDefinition"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExchangeTableDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExchangeTableDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/etl/{jobId}/create-data-exchange-table": {
      "post": {
        "tags": [
          "Etl"
        ],
        "operationId": "CreateDataExchangeTable",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/etl/{jobId}/generate-datasource": {
      "post": {
        "tags": [
          "Etl"
        ],
        "operationId": "GenerateDataSource",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/etl/{jobId}/data-source/is-valid": {
      "get": {
        "tags": [
          "Etl"
        ],
        "operationId": "DataSourceConfigurationIsValid",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/etl/{jobId}/generate-mock-dataset": {
      "post": {
        "tags": [
          "Etl"
        ],
        "operationId": "GenerateMockDataset",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DataRecord"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/etl/{jobId}/data-bindings": {
      "get": {
        "tags": [
          "Etl"
        ],
        "operationId": "GetDataBindings",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DataBindingDto"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DataBindingDto"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DataBindingDto"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/etl/{jobId}/get-data-exchange-table-ddl": {
      "get": {
        "tags": [
          "Etl"
        ],
        "operationId": "GetTableDdl",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/files/settings": {
      "get": {
        "tags": [
          "Files"
        ],
        "operationId": "GetSettings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileServiceSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileServiceSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileServiceSettings"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/files/{bucket}/upload": {
      "post": {
        "tags": [
          "Files"
        ],
        "operationId": "Upload",
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/files/{bucket}": {
      "get": {
        "tags": [
          "Files"
        ],
        "operationId": "List",
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoSearchResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoSearchResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoSearchResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/files/delete-file": {
      "delete": {
        "tags": [
          "Files"
        ],
        "operationId": "DeleteFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/health-check": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "operationId": "Check",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/hello/world": {
      "get": {
        "tags": [
          "HelloWorld"
        ],
        "operationId": "Home",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloWorldDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloWorldDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloWorldDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/hello/reset": {
      "post": {
        "tags": [
          "HelloWorld"
        ],
        "operationId": "TransportReset",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/can-print": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "CanPrint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CanPrintDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CanPrintDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CanPrintDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/inkjet/print": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "Print",
        "parameters": [
          {
            "name": "offsetX",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offsetY",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "printCycle",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PrintCycleModes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/board/enable-print": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "EnablePrint",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/board/disable-print": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "DisablePrint",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/layouts/create/{inkjetLayoutName}": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "CreateInkjetLayout",
        "parameters": [
          {
            "name": "inkjetLayoutName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/inkjet/layouts/{inkjetLayoutId}/add-entity": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "AddEntityToInkjetLayout",
        "parameters": [
          {
            "name": "inkjetLayoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "EntityName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "xPosition",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "yPosition",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "imageFile": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "imageFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/layouts/{inkjetLayoutId}/load": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "LoadInkjetLayout",
        "parameters": [
          {
            "name": "inkjetLayoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/layouts/{inkjetLayoutId}/print": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "PrintInkjetLayout",
        "parameters": [
          {
            "name": "offsetX",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offsetY",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inkjetLayoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/layouts/{inkjetLayoutId}/preview": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "InkjetLayoutPreview",
        "parameters": [
          {
            "name": "inkjetLayoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/layouts/validate-name": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "ValidateInkjetLayoutName",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/inkjet/layouts/find": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "FindInkjetLayouts",
        "parameters": [
          {
            "name": "IncludeFile",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeEntities",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchInkjetLayoutsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchInkjetLayoutsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchInkjetLayoutsResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/inkjet/layouts/{id}": {
      "put": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "RenameInkjetLayout",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetLayoutDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetLayoutDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetLayoutDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "DeleteInkjetLayout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/job-templates/{id}/layouts/available": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "GetAssignableInkjetLayoutsByJobTemplateId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 15
            }
          },
          {
            "name": "supportSide",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchInkjetLayoutsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchInkjetLayoutsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchInkjetLayoutsResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/inkjet/board/create-new-job": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "CreateNewJob",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/active-entities": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "GetActiveEntities",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetLayoutDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetLayoutDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetLayoutDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/inkjet/board/insert-image": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "InsertImage",
        "parameters": [
          {
            "name": "entityName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "y",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "images": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/test": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "Test",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/board/is-printing": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "IsPrinting",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/board/is-ready": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "IsReady",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/board/resolution": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "Resolution",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/settings/heaters-temperature": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "GetHeatersTemperature",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetTemperaturesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetTemperaturesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetTemperaturesDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/inkjet/settings/heater-temperature": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "SetHeaterTemperature",
        "parameters": [
          {
            "name": "heaterTemperature",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/settings/curing-settings": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "GetCuringSettings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CuringSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CuringSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CuringSettingsDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "SetCuringSettings",
        "parameters": [
          {
            "name": "CuringEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DualCuringEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FumeExtractorEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Level",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Speed",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/settings/pinning-settings": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "GetPinningSettings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PinningSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PinningSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PinningSettingsDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "SetPinningSettings",
        "parameters": [
          {
            "name": "Enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Level",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/settings/print-settings": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "GetPrintSettings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PrintSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintSettingsDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "SetPrintSettings",
        "parameters": [
          {
            "name": "PrintSpeed",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "VerticalMirrorEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HorizontalMirrorEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CMYKDirectEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EnableC",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EnableM",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EnableY",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EnableK",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DropSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/settings/multi-print-start": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "StartMultiPrint",
        "parameters": [
          {
            "name": "xRepetitions",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "xOffset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "yRepetitions",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "yDelta",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "areaWidth",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/settings/multi-print-stop": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "StopMultiPrint",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/settings/is-multi-print-running": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "IsMultiPrintRunning",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/configuration": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "SetCleaningConfiguration",
        "parameters": [
          {
            "name": "NormalPurgeDuration",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StrongPurgeDuration",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WiperPassCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PumpSpeed",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MainSpittingCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MainSpittingFreq",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MainSpittingCycles",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FinalSpittingCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FinalSpittingFreq",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FinalSpittingCycles",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "InkPrimingTime",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "VacuumPressureSetPoint",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SpittingOffset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AutoClean",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CleanAtStartup",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CleanFrequency",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "GetCleaningConfiguration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CleaningConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CleaningConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CleaningConfigurationDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/vacuum-pressure": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "GetVacuumPressure",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "float"
                }
              },
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "float"
                }
              },
              "text/json": {
                "schema": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/perform-deep-cleaning": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "PerformDeepCleaning",
        "parameters": [
          {
            "name": "strongPurgeCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "normalPurgeCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeLightCleaning",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/perform-normal-cleaning": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "PerformNormalCleaning",
        "parameters": [
          {
            "name": "purgeCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeLightCleaning",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/perform-light-cleaning": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "PerformLightCleaning",
        "parameters": [
          {
            "name": "wipeBefore",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/perform-purge": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "PerformPurge",
        "parameters": [
          {
            "name": "useStrong",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/toggle-capping": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "ToggleCapping",
        "parameters": [
          {
            "name": "moveUp",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/perform-wiping": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "PerformWiping",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/nozzle-check": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "summary": "Executes nozzle check by printing a 800x1000 image\r\nWith all channels enabled + CMYK Direct",
        "operationId": "NozzleCheck",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/perform-spitting": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "PerformSpitting",
        "parameters": [
          {
            "name": "firingSpeed",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "numSpits",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/toggle-capping-pump": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "ToggleCappingPump",
        "parameters": [
          {
            "name": "stop",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/toggle-ink-priming": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "ToggleInkPriming",
        "parameters": [
          {
            "name": "stop",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/move-to-capping": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "MoveHeadToCapping",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/move-to-maintenance": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "MoveHeadToMaintenance",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/cleaning/move-to-parking": {
      "post": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "MoveHeadToParking",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/get-print-layout-preview": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "GetPrintLayoutPreview",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/inkjet/maintenance/status": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "GetInkjetMaintenanceStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetMaintenanceStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetMaintenanceStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InkjetMaintenanceStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/inkjet/state": {
      "get": {
        "tags": [
          "Inkjet"
        ],
        "operationId": "GetXPrintState",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PrinterStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrinterStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrinterStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/lamp/state": {
      "post": {
        "tags": [
          "Lamp"
        ],
        "operationId": "SetLampState",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LampState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Lamp"
        ],
        "operationId": "GetLampState",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LampState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/laser-board/get-properties": {
      "get": {
        "tags": [
          "LaserBoard"
        ],
        "operationId": "GetProperties",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PropertyDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PropertyDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PropertyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/laser-board/set-properties": {
      "patch": {
        "tags": [
          "LaserBoard"
        ],
        "operationId": "SetProperties",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PropertyDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PropertyDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PropertyDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PropertyDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PropertyDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PropertyDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PropertyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/laser-board/change-lamp-color": {
      "post": {
        "tags": [
          "LaserBoard"
        ],
        "operationId": "ChangeColor",
        "parameters": [
          {
            "name": "color",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LampColors"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/logs": {
      "get": {
        "tags": [
          "Log"
        ],
        "operationId": "GetLogs",
        "parameters": [
          {
            "name": "StartTimeStamp",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndTimeStamp",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Levels",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ModuleNames",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "EventTypes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLogsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLogsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLogsResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/logs/filters": {
      "get": {
        "tags": [
          "Log"
        ],
        "operationId": "GetFilterables",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LogFilterablesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogFilterablesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogFilterablesDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/logs/export": {
      "get": {
        "tags": [
          "Log"
        ],
        "operationId": "ExportLogs",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/logs/clear": {
      "post": {
        "tags": [
          "Log"
        ],
        "operationId": "ClearLogs",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/machine/scanners": {
      "get": {
        "tags": [
          "Machine"
        ],
        "operationId": "ListScanners",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerModuleDefinition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerModuleDefinition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScannerModuleDefinition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/machine/modules": {
      "get": {
        "tags": [
          "Machine"
        ],
        "operationId": "ListModules",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleDefinition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleDefinition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleDefinition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/machine/device/{id}": {
      "get": {
        "tags": [
          "Machine"
        ],
        "operationId": "GetDeviceDescriptorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDefinition"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/machine/modules/{moduleId}/devices": {
      "get": {
        "tags": [
          "Machine"
        ],
        "operationId": "ListDevicesByModule",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceType",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DeviceType"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceDefinition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceDefinition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceDefinition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/machine/info": {
      "get": {
        "tags": [
          "Machine"
        ],
        "operationId": "GetSystemInformation",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/machine/network/addresses": {
      "get": {
        "tags": [
          "Machine"
        ],
        "operationId": "GetMachineAddresses",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/machine/status": {
      "get": {
        "tags": [
          "Machine"
        ],
        "operationId": "GetMachineStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MachineStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/machine-events/laser-board/state-changed": {
      "post": {
        "tags": [
          "MachineEvents"
        ],
        "operationId": "LaserBoardStateChanged",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LaserBoardStateChangedEventNotification"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LaserBoardStateChangedEventNotification"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LaserBoardStateChangedEventNotification"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LaserBoardStateChangedEventNotification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/magneticencoder/read": {
      "get": {
        "tags": [
          "MagneticEncoder"
        ],
        "operationId": "ReadData",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MagStripeDataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MagStripeDataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MagStripeDataDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/magneticencoder/write": {
      "post": {
        "tags": [
          "MagneticEncoder"
        ],
        "operationId": "WriteData",
        "parameters": [
          {
            "name": "useHiCoercivity",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MagStripeDataDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MagStripeDataDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MagStripeDataDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MagStripeDataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/magneticencoder/{jobTemplateId}/configuration": {
      "get": {
        "tags": [
          "MagneticEncoder"
        ],
        "operationId": "GetMagneticConfiguration",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MagneticStripeConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MagneticStripeConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MagneticStripeConfigurationDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MagneticEncoder"
        ],
        "operationId": "UpdateMagneticConfiguration",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MagneticStripeConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MagneticStripeConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MagneticStripeConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MagneticStripeConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/modbus/clients": {
      "get": {
        "tags": [
          "Modbus"
        ],
        "operationId": "GetModbusClients",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/modbus/{port}/write-single-register": {
      "post": {
        "tags": [
          "Modbus"
        ],
        "operationId": "WriteSingleRegister",
        "parameters": [
          {
            "name": "port",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/modbus/{port}/read-holding-registers": {
      "post": {
        "tags": [
          "Modbus"
        ],
        "operationId": "ReadHoldingRegisters",
        "parameters": [
          {
            "name": "port",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/pcsc-gateway/establish-context": {
      "post": {
        "tags": [
          "PCSCGateway"
        ],
        "summary": "AIDA Server invokes ScEstablishContext on startup. If for any reason the current context becomes invalid (usb cable\r\ndisconnected for example) you can use this endpoint to re-establish a new PcScContext.",
        "operationId": "EstablishContext",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SCardEstablishContextParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SCardEstablishContextParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SCardEstablishContextParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SCardEstablishContextParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/pcsc-gateway/release-context": {
      "post": {
        "tags": [
          "PCSCGateway"
        ],
        "operationId": "ReleaseContext",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/pcsc-gateway/readers/{readerIndex}": {
      "get": {
        "tags": [
          "PCSCGateway"
        ],
        "summary": "Return the list of available readers",
        "operationId": "GetReader",
        "parameters": [
          {
            "name": "readerIndex",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SCardReader"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SCardReader"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SCardReader"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pcsc-gateway/readers": {
      "get": {
        "tags": [
          "PCSCGateway"
        ],
        "summary": "Return the list of available readers",
        "operationId": "GetReaders",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SCardReader"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SCardReader"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SCardReader"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pcsc-gateway/{readerIndex}/smart-card/atr": {
      "get": {
        "tags": [
          "PCSCGateway"
        ],
        "summary": "Invokes SCardConnect on the specified reader and tries to read the ATR\r\nfrom the card currently present in the reader",
        "operationId": "GetSmartCardAtr",
        "parameters": [
          {
            "name": "readerIndex",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pcsc-gateway/{readerIndex}/smart-card/transmit": {
      "post": {
        "tags": [
          "PCSCGateway"
        ],
        "summary": "Invoke SCardTransmit on the specified reader",
        "operationId": "Transmit",
        "parameters": [
          {
            "name": "readerIndex",
            "in": "path",
            "description": "The reader id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pcsc-gateway/{readerIndex}/smart-card/status": {
      "get": {
        "tags": [
          "PCSCGateway"
        ],
        "summary": "Invoke SCardStatus on the specified reader",
        "operationId": "GetSmartCardStatus",
        "parameters": [
          {
            "name": "readerIndex",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SCardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SCardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SCardState"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pcsc-gateway/{readerIndex}/smart-card/connect": {
      "post": {
        "tags": [
          "PCSCGateway"
        ],
        "summary": "Invoke SCardConnect on the specified reader. The card handle (hCard) is held server side\r\nuntil the next time Connect is invoked",
        "operationId": "SmartCard.Connect",
        "parameters": [
          {
            "name": "readerIndex",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SCardConnectParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SCardConnectParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SCardConnectParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SCardConnectParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PcScConnectResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PcScConnectResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PcScConnectResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pcsc-gateway/{readerIndex}/smart-card/reconnect": {
      "post": {
        "tags": [
          "PCSCGateway"
        ],
        "summary": "Invoke SCardReconnect on the specified reader",
        "operationId": "SmartCard.Reconnect",
        "parameters": [
          {
            "name": "readerIndex",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SCardReconnectParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SCardReconnectParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SCardReconnectParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SCardReconnectParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/pcsc-gateway/{readerIndex}/smart-card/disconnect": {
      "post": {
        "tags": [
          "PCSCGateway"
        ],
        "summary": "Invoke SCardDisconnect on the specified reader",
        "operationId": "SmartCard.Disconnect",
        "parameters": [
          {
            "name": "readerIndex",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SCardDisconnectParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SCardDisconnectParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SCardDisconnectParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SCardDisconnectParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PCSCActionResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PCSCActionResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PCSCActionResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/personalizationsession/personalization-sessions": {
      "get": {
        "tags": [
          "PersonalizationSession"
        ],
        "operationId": "GetPersonalizationSessions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonalizationSessionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonalizationSessionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonalizationSessionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/personalizationsession/personalization-session": {
      "get": {
        "tags": [
          "PersonalizationSession"
        ],
        "operationId": "GetPersonalizationSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realTimeUpdate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalizationSessionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalizationSessionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalizationSessionDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PersonalizationSession"
        ],
        "operationId": "DeletePersonalizationSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/personalizationsession/personalization-session-events": {
      "get": {
        "tags": [
          "PersonalizationSession"
        ],
        "operationId": "GetPersonalizationSessionEvents",
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startingFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonalizationSessionEventDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonalizationSessionEventDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonalizationSessionEventDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/personalizationsession/personalization-session/last-30-days": {
      "get": {
        "tags": [
          "PersonalizationSession"
        ],
        "operationId": "Last30Days",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoSessionAggregateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoSessionAggregateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoSessionAggregateDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflows/{jobTemplateId}/configuration": {
      "get": {
        "tags": [
          "PersoProcessConfiguration"
        ],
        "operationId": "GetPersoProcessConfiguration",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersoProcessConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersoProcessConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersoProcessConfigurationDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PersoProcessConfiguration"
        ],
        "operationId": "SetPersoProcessConfiguration",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PersoProcessConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersoProcessConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersoProcessConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersoProcessConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/workflows/{jobTemplateId}/perso-process-steps": {
      "get": {
        "tags": [
          "PersoProcessConfiguration"
        ],
        "operationId": "GetPersoSteps",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoOperationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflows/start-test-perso-process": {
      "get": {
        "tags": [
          "PersoProcessConfiguration"
        ],
        "operationId": "StartTestPersoProcess",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "disableLaserSource",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "machineId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobInstance"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobInstance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobInstance"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflows/stop-test-perso-process": {
      "get": {
        "tags": [
          "PersoProcessConfiguration"
        ],
        "operationId": "StopTestPersoProcess",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoOperationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflows/get-test-perso-process-status": {
      "get": {
        "tags": [
          "PersoProcessConfiguration"
        ],
        "operationId": "GetTestPersoProcessStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoOperationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoOperationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersoOperationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflows/job-instances": {
      "get": {
        "tags": [
          "PersoProcessConfiguration"
        ],
        "operationId": "GetJobInstances",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobInstance"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobInstance"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobInstance"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflows/job-instance/{jobInstanceId}": {
      "get": {
        "tags": [
          "PersoProcessConfiguration"
        ],
        "operationId": "GetJobInstance",
        "parameters": [
          {
            "name": "jobInstanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobInstance"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobInstance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobInstance"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflows/perso-process/{jobTemplateId}": {
      "get": {
        "tags": [
          "PersoProcessConfiguration"
        ],
        "operationId": "GetPersoProcessPreview",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersoOperation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersoOperation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersoOperation"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetState",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/debug/enable": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "EnableDebugMode",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/settings": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetSamLightOptions",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SamlightOpticSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamlightOpticSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamlightOpticSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/mark-rect-at": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DRectangleDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DRectangleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DRectangleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DRectangleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/settings/optic": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetHeadOpticSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SamLightHeadOpticSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamLightHeadOpticSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamLightHeadOpticSettings"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdateSamLightOptions",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SamLightOptionsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SamLightOptionsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SamLightOptionsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SamLightOptionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/settings/optic/lens/offset": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SetOffset",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Vector2d"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vector2d"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Vector2d"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Vector2d"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SamLightHeadOpticSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamLightHeadOpticSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamLightHeadOpticSettings"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/apply-offsets-from-config": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ApplyOffsetsFromConfig",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SamLightHeadOpticSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamLightHeadOpticSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamLightHeadOpticSettings"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/settings/optic/lens/gain": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SetGain",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Vector2d"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vector2d"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Vector2d"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Vector2d"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/debug/disable": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DisableDebugMode",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/configuration/export": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ExportScannerConfig",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/configuration/download": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DownloadScannerConfig",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/load-job": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "LoadJobTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/load-sjf-file": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "LoadSjfFile",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "filename": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/sjf-files": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ListSjfFiles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/load-job-instance": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "summary": "Loads a job template, fetches the personalization data from the configured data source\r\nand updates entities",
        "operationId": "LoadJobInstance",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "skipUpdate",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/system-pixel-map": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetSystemPixelMap",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdateSystemPixelMap",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PixelMapDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PixelMapDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PixelMapDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PixelMapDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/pens/{id}/pixel-map": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetPixelMapForPen",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SetPixelMapForPen",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PixelMapDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PixelMapDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PixelMapDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PixelMapDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixelMapDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/load-layout": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "LoadLayout",
        "parameters": [
          {
            "name": "supportSide",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overwriteEntities",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "loadMaterials",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/export-layout": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ExportLayout",
        "parameters": [
          {
            "name": "layoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/load-job-template-layout": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "LoadJobTemplateLayout",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layoutId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/mark-layout": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MarkLayout",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/select-entities": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SelectEntities",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SelectEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SelectEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/mark-entities": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MarkEntities",
        "parameters": [
          {
            "name": "waitForCompletion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MarkEntitiesResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarkEntitiesResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarkEntitiesResult"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/stop-marking": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "StopMarking",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/health-check": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/red-pointer/start": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "StartRedPointer",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StartRedPointerDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartRedPointerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StartRedPointerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StartRedPointerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/red-pointer/stop": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "StopRedPointer",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/transform/translate": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "TranslateEntities",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/transform/rotate": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RotateEntities",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RotateEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RotateEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RotateEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RotateEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/transform/move-to": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MoveTo",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/transform/scale": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "Scale",
        "parameters": [
          {
            "name": "entity",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scaleX",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "scaleY",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/transform/mirror-x": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MirrorX",
        "parameters": [
          {
            "name": "entity",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/transform/mirror-y": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MirrorY",
        "parameters": [
          {
            "name": "entity",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/transform/align-entities": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "AlignEntities",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AlignEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlignEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AlignEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AlignEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/transform/center-entities-vertical": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CenterEntitiesVertical",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/transform/center-entities-horizontal": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CenterEntitiesHorizontal",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/transform/center-entities": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CenterEntities",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CenterEntitiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/save": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SaveJobTemplate",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/save-job-file": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SaveJobTemplateFile",
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/update-entities": {
      "put": {
        "tags": [
          "Scanner"
        ],
        "summary": "Updates entity text/image data",
        "operationId": "UpdateEntities",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "assets": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "data": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "transforms": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/TransformOptions"
                    }
                  }
                }
              },
              "encoding": {
                "assets": {
                  "contentType": "application/octet-stream",
                  "style": "form"
                },
                "data": {
                  "style": "form"
                },
                "transforms": {
                  "contentType": "application/json",
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/entities": {
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdateEntityProperties",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScannerEntityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScannerEntityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScannerEntityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScannerEntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerEntityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerEntityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerEntityDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/entities/set-pen": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SetEntityPen",
        "parameters": [
          {
            "name": "entityId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "penId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/{jobId}/load-job-data/{supportId}": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "LoadJobData",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "supportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/settings-file": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UploadSettingsFile",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "settingsFile": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "settingsFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DownloadSettingsFile",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/is-connected": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "IsConnected",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/camera/info": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetCameraInfo",
        "parameters": [
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/connect": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "Connect",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/camera/ocr/execute": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RunOcr",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OcrResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/camera/ocr-settings": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CreateOcrSettings",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OcrSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrSettingsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdateOcrSettings",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OcrSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OcrSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrSettingsDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "FindOcrSettings",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchOcrSettingsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchOcrSettingsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchOcrSettingsResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/camera/ocr-settings/{ocrSettingsId}": {
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DeleteOcrSettings",
        "parameters": [
          {
            "name": "ocrSettingsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OcrSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-template-ocr-settings": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CreateJobTemplateOcrSettings",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdateJobTemplateOcrSettings",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-template-ocr-settings/{jobTemplateOcrSettingsId}": {
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DeleteJobTemplateOcrSettings",
        "parameters": [
          {
            "name": "jobTemplateOcrSettingsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/camera/ocr/supported-languages": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetSupportedOcrLanguages",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/camera/barcode": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RunBarcodeReader",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BarcodeParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeReadResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeReadResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeReadResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/camera/live": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "LiveStream",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "preset",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "warpPerspective",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/camera/live.html": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "LiveStreamPage",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preset",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "warpPerspective",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/settings/homography": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SaveHomographySettings",
        "parameters": [
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomographySettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomographySettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomographySettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomographySettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HomographySettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomographySettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomographySettingsDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetHomographySettings",
        "parameters": [
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HomographySettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomographySettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomographySettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/resize-entity": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ResizeEntity",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "height",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/create-rect": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CreateRectangle",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DRectangleDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DRectangleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DRectangleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DRectangleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/create-line": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CreateLine",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLineDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLineDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLineDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLineDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/create-chessboard-job": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CreateChessBoardJob",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/vision/get-undistorted-image": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetUndistortedImage",
        "parameters": [
          {
            "name": "preset",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/camera/settings": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CreateCameraSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CameraSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CameraSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CameraSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CameraSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdateCameraSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CameraSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CameraSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CameraSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CameraSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetCameraPresetsList",
        "parameters": [
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CameraSettingsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CameraSettingsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CameraSettingsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/camera/settings/{presetName}": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetCameraPresetByName",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "presetName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/camera/settings/{presetName}/reset": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ResetCameraOutputSettings",
        "parameters": [
          {
            "name": "presetName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/camera/get-snapshot": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetSnapshot",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "width",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "height",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "warpPerspective",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "preset",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/camera/get-snapshot.{format}": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetSnapshotImage",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cameraId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "width",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "height",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "warpPerspective",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "preset",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/show-application-window": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ShowApplicationWindow",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/move-abs": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MoveAbs",
        "parameters": [
          {
            "name": "x",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "y",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/preview.jpg": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetPreview",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/pens": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetCurrentPenSet",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PenDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PenDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PenDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/save-settings": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SaveSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/pens/import": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ImportPenSet",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/pens/export": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ExportPenSet",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/pens/save": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SavePenSet",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "syncMetadata",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/pens/{id}": {
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdatePen",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PenDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PenDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PenDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PenDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetLaserPen",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PenDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/laser-board/state": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetLaserBoardState",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/transport/set-offset": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SetParameter",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/rename-markers": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RenameMarkers",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/illumination/disable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DisableIllumination",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/illumination/enable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "EnableIllumination",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/laser/enable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "EnableLaserPen",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/laser/disable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DisableLaserPen",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/red-pointer/enable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "EnableRedPointer",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/red-pointer/disable": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DisableRedPointer",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaserBoardState"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/create-calibration-job": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CreateCalibrationJob",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/filename": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetCurrentJobFilename",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{id}/measure-mark-time": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "MeasureEntitiesMarkTime",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{id}/simulate-mark/{cardId}": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SimulateMark",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{id}/test-selection/{cardId}": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "TestSelection",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{id}/compute-mark-groups": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ComputeMarkGroups",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDescriptor"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDescriptor"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDescriptor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "CreateJobTemplate",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "FindJobTemplates",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeLayouts",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeFile",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeEntities",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobTemplatesResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobTemplatesResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobTemplatesResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/close": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "summary": "Clears the current job on SCAPS",
        "operationId": "Clear",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannerAppStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{id}/auto-pos/init": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "InitializeAutoPos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{jobTemplateId}/read-back-configuration": {
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DeleteReadBackConfiguration",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "SetReadBackConfiguration",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReadBackConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReadBackConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReadBackConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReadBackConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OcrReadBackConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/ChipReadBackConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/MagneticReadBackConfigurationDto"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OcrReadBackConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/ChipReadBackConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/MagneticReadBackConfigurationDto"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OcrReadBackConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/ChipReadBackConfigurationDto"
                    },
                    {
                      "$ref": "#/components/schemas/MagneticReadBackConfigurationDto"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{jobTemplateId}/layouts/{layoutId}/autopos-settings": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "AddJobTemplateLayoutAutoPosSettings",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateLayoutAutoPosSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateLayoutAutoPosSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateLayoutAutoPosSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobTemplateLayoutAutoPosSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/autopos-settings": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "FindJobTemplateLayoutAutoPosSettings",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobTemplateLayoutAutoPosSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobTemplateLayoutAutoPosSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobTemplateLayoutAutoPosSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{jobTemplateId}/layouts/{layoutId}/autopos/settings": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetAutoPosSettings",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{id}/chip-encoding/settings": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "AddJobTemplateChipEncodingConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/validate-name": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ValidateJobTemplateName",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{id}": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetJobTemplateById",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DeleteJobTemplate",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{id}/layouts/assigned": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetAssignedLayoutsByJobTemplateId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobLayoutsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobLayoutsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobLayoutsResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{id}/layouts/available": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetAssignableLayoutsByJobTemplateId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 15
            }
          },
          {
            "name": "supportSide",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLayoutsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLayoutsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLayoutsResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-template/layout/update-mirroring-settings": {
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdateMirroringSettings",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMirroringSettingsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMirroringSettingsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMirroringSettingsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMirroringSettingsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/job-template/{id}/layouts": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "AssignLayoutsToJobTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobTemplateLayoutDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobTemplateLayoutDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobTemplateLayoutDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobTemplateLayoutDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/job-template/{jobTemplateId}/{supportSide}/{layoutId}": {
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RemoveLayoutFromJobTemplate",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "supportSide",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "AssignLayoutToJobTemplate",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "supportSide",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "index",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/job-template/{id}/inkjetlayouts": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "AssignInkjetLayoutsToJobTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobTemplateInkjetLayoutDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobTemplateInkjetLayoutDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobTemplateInkjetLayoutDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobTemplateInkjetLayoutDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/job-template/{jobTemplateId}/{supportSide}/{inkjetLayoutId}": {
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RemoveInkjetLayoutFromJobTemplate",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inkjetLayoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "supportSide",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "AssignInkjetLayoutToJobTemplate",
        "parameters": [
          {
            "name": "jobTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "supportSide",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inkjetLayoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "index",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/job-template/{id}/rebuild-job-file": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RebuildSjfFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/job-template/{id}/layouts/upload": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UploadLayoutAndAddToJobTemplate",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "layoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportSide",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-template/{id}/webhooks-target": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "AssignWebHookTarget",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RemoveWebhooksTarget",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/job-template/{id}/jobs": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "FindJobs",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JobStatus"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobsResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-template/{id}/mark-groups": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "AddMarkGroup",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkGroup"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkGroup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkGroup"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/job-templates/{id}/mark-groups": {
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RemoveMarkGroups",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UpdateMarkGroups",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScannerMarkGroupDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScannerMarkGroupDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScannerMarkGroupDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScannerMarkGroupDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTemplateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/compute-mark-groups-with-strategy": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ComputeMarkGroupsWithStrategy",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "supportId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "strategy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarkGroupSummaryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarkGroupSummaryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarkGroupSummaryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/layouts": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "FindLayouts",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeFile",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeEntities",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLayoutsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLayoutsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLayoutsResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/layouts/{id}": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetLayoutById",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scanner"
        ],
        "operationId": "RenameLayout",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Scanner"
        ],
        "operationId": "DeleteLayout",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/layouts/settings": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "GetLayoutStoreSettings",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutStoreSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutStoreSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutStoreSettings"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/layouts/validate-name": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ValidateLayoutName",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameValidationResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/layouts/import/_validate": {
      "get": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ImportLayoutFileValidation",
        "parameters": [
          {
            "name": "layoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/scanner/layouts/import": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "ImportLayoutFile",
        "parameters": [
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/scanner/layouts/upload": {
      "post": {
        "tags": [
          "Scanner"
        ],
        "operationId": "UploadLayoutFile",
        "parameters": [
          {
            "name": "layoutName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportSide",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scannerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/service/transport/start-test": {
      "post": {
        "tags": [
          "Service"
        ],
        "operationId": "StartTestTransport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TestTransportStartParams"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestTransportStartParams"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestTransportStartParams"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestTransportStartParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/service/autopos/start-test": {
      "post": {
        "tags": [
          "Service"
        ],
        "operationId": "StartTestAutopos",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TestAutoposStartParams"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestAutoposStartParams"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestAutoposStartParams"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestAutoposStartParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/service/ocr/start-test": {
      "post": {
        "tags": [
          "Service"
        ],
        "operationId": "StartTestOcr",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TestOcrStartParams"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestOcrStartParams"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestOcrStartParams"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestOcrStartParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/service/magstripe/start-test": {
      "post": {
        "tags": [
          "Service"
        ],
        "operationId": "StartTestMagStripe",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TestMagStripeStartParams"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestMagStripeStartParams"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestMagStripeStartParams"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestMagStripeStartParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/service/test/cancel": {
      "post": {
        "tags": [
          "Service"
        ],
        "operationId": "CancelTest",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/service/test/state": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "GetTestState",
        "parameters": [
          {
            "name": "taskType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DiagnosticTaskType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnosticTaskState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnosticTaskState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnosticTaskState"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/system/system-status": {
      "get": {
        "tags": [
          "System"
        ],
        "operationId": "GetSystemStatus",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/system/set-system-model": {
      "post": {
        "tags": [
          "System"
        ],
        "operationId": "SetSystemModel",
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/system/get-system-model": {
      "get": {
        "tags": [
          "System"
        ],
        "operationId": "GetSystemModel",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/system/set-system-serial": {
      "post": {
        "tags": [
          "System"
        ],
        "operationId": "SetSystemSerial",
        "parameters": [
          {
            "name": "serial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/system/get-system-serial": {
      "get": {
        "tags": [
          "System"
        ],
        "operationId": "GetSystemSerial",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/system-info": {
      "get": {
        "tags": [
          "SystemInfo"
        ],
        "operationId": "GetSystemInfo",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/state": {
      "get": {
        "tags": [
          "Transport"
        ],
        "summary": "Returns a list of objects with the state of each module",
        "operationId": "GetTransportState",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransportState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportState"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/transport/state/realtime": {
      "get": {
        "tags": [
          "Transport"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransportState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportState"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/transport/module/{moduleId}/state": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetBoxModuleTransportState",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/disconnect": {
      "post": {
        "tags": [
          "Transport"
        ],
        "summary": "Disconnects the transport module",
        "operationId": "Disconnect",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/aida/v1/transport/connect": {
      "post": {
        "tags": [
          "Transport"
        ],
        "summary": "Connects the transport module",
        "operationId": "ConnectTransport",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/aida/v1/transport/modules": {
      "get": {
        "tags": [
          "Transport"
        ],
        "summary": "Returns an object with the state of the whole transport",
        "operationId": "GetModules",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportModuleState"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportModuleState"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportModuleState"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/aida/v1/transport/cpu-reset": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "BoxTransportCpuReset",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/feed": {
      "post": {
        "tags": [
          "Transport"
        ],
        "summary": "Moves a card from the Feeder to the desired destination",
        "operationId": "Feed",
        "parameters": [
          {
            "name": "Source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Destination",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card moved correctly"
          },
          "500": {
            "description": "Error moving card"
          }
        }
      }
    },
    "/aida/v1/transport/shift": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "Shift",
        "parameters": [
          {
            "name": "supportId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/{moduleId}/flip-card": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "FlipCard",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/can-perform-movement": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "CanPerformMovement",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/reset": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "Reset",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/{moduleId}/reset": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "ResetModule",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/move": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "Move",
        "parameters": [
          {
            "name": "Source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Destination",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/positions": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetTransportPositions",
        "parameters": [
          {
            "name": "includeAliases",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/transport/machine-inputs": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetMachineInputs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/transport/machine-exits": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetMachineExists",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/transport/{position}": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetTransportPosition",
        "parameters": [
          {
            "name": "position",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPositionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPositionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPositionDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/transport/path/exist": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "PathExist",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/transport/path/shortest/plan": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "ComputeShortestPathMovePlan",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/path/shortest": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetShortestPath",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/sources/available": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetAvailableSources",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/transport/targets/available": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetAvailableTargets",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPositionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/transport/move-first-available": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "MoveFirstAvailableCardToPosition",
        "parameters": [
          {
            "name": "target",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/eject-all-cards": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "EjectAllCards",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/eject-card": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "EjectCard",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/module/{id}/set-serial": {
      "post": {
        "tags": [
          "Transport"
        ],
        "operationId": "SetSerialNumber",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/transport/module/debug-info": {
      "get": {
        "tags": [
          "Transport"
        ],
        "operationId": "GetModuleStatus",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/webhooks-targets": {
      "get": {
        "tags": [
          "WebhooksTargets"
        ],
        "operationId": "FindWebhooksTargets",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.PropertyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortCriteria.Direction",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SearchWebhooksTargetsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchWebhooksTargetsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchWebhooksTargetsResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WebhooksTargets"
        ],
        "operationId": "CreateWebhooksTarget",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebhooksTargets"
        ],
        "operationId": "UpdateWebhooksTarget",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhooksTargetDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/webhooks-targets/{id}": {
      "get": {
        "tags": [
          "WebhooksTargets"
        ],
        "operationId": "GetWebhooksTargetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebhooksTargets"
        ],
        "operationId": "DeleteWebhooksTarget",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksTargetDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WebhooksTargets"
        ],
        "operationId": "TestWebhookTarget",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookTargetTestResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookTargetTestResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookTargetTestResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/queued-jobs": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetQueuedJobs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/state": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetWorkflowSchedulerState",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/start": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "StartWorkflowScheduler",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowSchedulerStartupParamsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowSchedulerStartupParamsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowSchedulerStartupParamsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowSchedulerStartupParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/resume": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "ResumeWorkflowScheduler",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobInstance"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobInstance"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobInstance"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/stop": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "StopWorkflowScheduler",
        "parameters": [
          {
            "name": "stopAllRunningWorkflows",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "errorCode",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JobErrorCodes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSchedulerStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/metrics": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetMetrics",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeMetrics"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeMetrics"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeMetrics"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/workflow-registry": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetWorkflowRegistry",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModelPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModelPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModelPagedList"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/workflow-blueprints": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetWorkflowBlueprints",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBlueprintSummaryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBlueprintSummaryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowBlueprintSummaryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/workflow-instances": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetWorkflowInstances",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkflowStatus"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowInstanceDtoPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowInstanceDtoPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowInstanceDtoPagedList"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "DeleteWorkflowInstances",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/workflow-instances/suspended": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetSuspendedWorkflows",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/workflow-instances/suspended/cancel": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "CancelSuspendedWorkflows",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/workflows/signal/external-process-completed": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "summary": "Notifies a suspended workflow instance when that the external process has completed execution",
        "operationId": "SignalExternalProcessCompleted",
        "parameters": [
          {
            "name": "waitForCompletion",
            "in": "query",
            "description": "If true, the server will respond once the workflow enters the completed/faulted state",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "The External process completed message payload",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalProcessCompletedMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalProcessCompletedMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalProcessCompletedMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalProcessCompletedMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobInstance"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobInstance"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobInstance"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/workflows/running": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetRunningWorkflows",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowInstanceSummaryModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/jobs/info": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetJobStatus",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/workflow-instances/running": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetRunningWorkflowIds",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/workflow-instances/{id}/_cancel": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "CancelWorkflowInstance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowBlueprintSummaryModel"
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/workflow-instances/running/_cancel": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "CancelRunningWorkflowInstances",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/named-locks/release": {
      "post": {
        "tags": [
          "WorkflowScheduler"
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/named-locks": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "ListNamedLocks",
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locked",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/named-locks/{resourceName}": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "GetNamedLock",
        "parameters": [
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/print-queue": {
      "delete": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "ClearPrintQueue",
        "parameters": [
          {
            "name": "jobTemplateName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/aida/v1/workflow-scheduler/update-invalid-database-entries": {
      "get": {
        "tags": [
          "WorkflowScheduler"
        ],
        "operationId": "UpdateInvalidDatabaseEntries",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AidaUserDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AlignEntitiesDto": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "reference": {
            "$ref": "#/components/schemas/AlignReference"
          }
        },
        "additionalProperties": false
      },
      "AlignReference": {
        "enum": [
          "Top",
          "Right",
          "Bottom",
          "Left",
          "Middle",
          "Center"
        ],
        "type": "string"
      },
      "ApiKeyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "claims": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiKeyDtoSearchResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiKeyDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AppConfig": {
        "type": "object",
        "properties": {
          "machineModel": {
            "$ref": "#/components/schemas/MachineModel"
          },
          "udpDiscoveryEnabled": {
            "type": "boolean"
          },
          "eventTracingEnabled": {
            "type": "boolean"
          },
          "nodeId": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "clusterName": {
            "type": "string",
            "nullable": true
          },
          "masterBaseAddress": {
            "type": "string",
            "nullable": true
          },
          "logSerialData": {
            "type": "boolean"
          },
          "laserBoardEnabled": {
            "type": "boolean"
          },
          "mockLaserBoardEnabled": {
            "type": "boolean"
          },
          "boxTransportEnabled": {
            "type": "boolean"
          },
          "mockTransportEnabled": {
            "type": "boolean"
          },
          "magEncoderEnabled": {
            "type": "boolean"
          },
          "magEncoderPortName": {
            "type": "string",
            "nullable": true
          },
          "pcScEnabled": {
            "type": "boolean"
          },
          "encoderEnabled": {
            "type": "boolean"
          },
          "workflowsEnabled": {
            "type": "boolean"
          },
          "elsaWorkflowsEnabled": {
            "type": "boolean",
            "readOnly": true
          },
          "scannerAppType": {
            "$ref": "#/components/schemas/ScannerAppType"
          },
          "scannerHeadEnabled": {
            "type": "boolean"
          },
          "localScannerEnabled": {
            "type": "boolean"
          },
          "cameraEnabled": {
            "type": "boolean"
          },
          "laserBoard": {
            "$ref": "#/components/schemas/LaserBoardConfig"
          },
          "pcScManager": {
            "$ref": "#/components/schemas/PcScManagerConfiguration"
          },
          "cameraType": {
            "$ref": "#/components/schemas/CameraType"
          },
          "blobTempPath": {
            "type": "string",
            "nullable": true
          },
          "enableReverseProxy": {
            "type": "boolean"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleDefinition"
            },
            "nullable": true
          },
          "transport": {
            "$ref": "#/components/schemas/TransportConfig"
          },
          "opticSettings": {
            "$ref": "#/components/schemas/OpticSettings"
          },
          "lamp": {
            "$ref": "#/components/schemas/LampConfig"
          },
          "supportedWorkflows": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "useUsbDisplay": {
            "type": "boolean"
          },
          "samLight": {
            "$ref": "#/components/schemas/SamLightOptions"
          },
          "webHooks": {
            "$ref": "#/components/schemas/WebHooksOptions"
          }
        },
        "additionalProperties": false
      },
      "ApplicationFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "filename": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "originalFilename": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "location": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "checksum": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "extension": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fileBucketId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationImage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "file": {
            "$ref": "#/components/schemas/ApplicationFile"
          },
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "horizontalResolution": {
            "type": "number",
            "format": "float"
          },
          "verticalResolution": {
            "type": "number",
            "format": "float"
          },
          "imageFormat": {
            "type": "string",
            "nullable": true
          },
          "templateMatchingConfigurationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationImageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "file": {
            "$ref": "#/components/schemas/FileDto"
          },
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "horizontalResolution": {
            "type": "number",
            "format": "float"
          },
          "verticalResolution": {
            "type": "number",
            "format": "float"
          },
          "imageFormat": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AutoPosConfigSummaryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "isConfigured": {
            "type": "boolean"
          },
          "threshold": {
            "type": "number",
            "format": "float"
          },
          "templateMatchingConfigurationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AutoPosResultDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/AutoPosResultStatusCode"
          },
          "pixelsPerMillimeterX": {
            "type": "number",
            "format": "double"
          },
          "pixelsPerMillimeterY": {
            "type": "number",
            "format": "double"
          },
          "offsetXMillimeters": {
            "type": "number",
            "format": "double"
          },
          "offsetYMillimeters": {
            "type": "number",
            "format": "double"
          },
          "cameraId": {
            "type": "string",
            "nullable": true
          },
          "warpPerspective": {
            "type": "boolean"
          },
          "acquisitionPresentName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutoPosResultStatusCode": {
        "enum": [
          "E_NO_ERROR",
          "E_MISSING_TEMPLATE_CONFIGURATION",
          "E_MISSING_SEARCH_AREA_CONFIGURATION",
          "E_NO_MATCH",
          "E_CAMERA_IMAGE_ACQUISITION_ERROR",
          "E_INVALID_CAMERA_ID",
          "E_INVALID_CAMERA_CONFIG",
          "E_AUTO_POS_CONFIG_NOT_FOUND"
        ],
        "type": "string"
      },
      "BarcodeParamsDto": {
        "type": "object",
        "properties": {
          "rotation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "roi": {
            "$ref": "#/components/schemas/RectangleDto"
          }
        },
        "additionalProperties": false
      },
      "BarcodeReadResultDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "barcodeFormat": {
            "type": "string",
            "nullable": true
          },
          "durationMs": {
            "type": "integer",
            "format": "int64"
          },
          "rawBytesBase64": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BinningMode": {
        "enum": [
          "Off",
          "BinningH",
          "BinningV",
          "BinningHV",
          "Binning3H",
          "Binning3V",
          "Binning3H3V",
          "BinningHAvg",
          "BinningVAvg",
          "BinningHVAvg",
          "Binning3HAvg",
          "Binning3VAvg",
          "Binning3H3VAvg",
          "DroppingH",
          "DroppingV",
          "DroppingHV",
          "Dropping3H",
          "Dropping3V",
          "Dropping3H3V"
        ],
        "type": "string"
      },
      "BoxModuleConfiguration": {
        "enum": [
          "Basic",
          "SingleFeederOnBoard",
          "SingleFeeder",
          "DoubleFeeder",
          "SingleChipReader",
          "SingleRfIdReader",
          "SingleChipAndRfIdReader",
          "MultiChipLowerBoard",
          "MultiChipHigherBoard",
          "QualityControl",
          "MagStripeReader",
          "InkJetPrinter",
          "SingleStackerOnBoard",
          "SingleStacker",
          "DoubleStacker"
        ],
        "type": "string"
      },
      "BoxModuleDoorStatus": {
        "enum": [
          "Closed",
          "FrontOpen",
          "RearOpen",
          "RejectOpen"
        ],
        "type": "string"
      },
      "BoxModuleState": {
        "type": "object",
        "properties": {
          "statusChangeId": {
            "type": "integer",
            "format": "int32"
          },
          "moduleId": {
            "type": "integer",
            "format": "int32"
          },
          "hardwareRevision": {
            "type": "string",
            "nullable": true
          },
          "firmwareRevision": {
            "type": "string",
            "nullable": true
          },
          "configuration": {
            "$ref": "#/components/schemas/BoxModuleConfiguration"
          },
          "dipSwitchHardwareSetting": {
            "$ref": "#/components/schemas/DipSwitchSetting"
          },
          "positions": {
            "$ref": "#/components/schemas/ModulePositionsFlags"
          },
          "boxModuleDoors": {
            "$ref": "#/components/schemas/BoxModuleDoorStatus"
          },
          "transportStatus": {
            "$ref": "#/components/schemas/BoxModuleTransportStatus"
          },
          "closedPhotoSensors": {
            "$ref": "#/components/schemas/PhotoSensorsFlags"
          },
          "statusFlags": {
            "$ref": "#/components/schemas/TransportStatusFlags"
          },
          "transportBoardSerialNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoxModuleStateChangedEventNotification": {
        "type": "object",
        "properties": {
          "nodeId": {
            "type": "string",
            "nullable": true
          },
          "moduleId": {
            "type": "string",
            "nullable": true
          },
          "eventData": {
            "$ref": "#/components/schemas/BoxModuleState"
          }
        },
        "additionalProperties": false
      },
      "BoxModuleTransportStatus": {
        "enum": [
          "Uninitialized",
          "Ready",
          "AnotherCmdExError",
          "Feeder1Empty",
          "MagFeederOut",
          "MagStackerOut",
          "CardJam",
          "FlipError",
          "Feeder1Error",
          "Feeder2Empty",
          "MagStacker2Out",
          "SpindleError",
          "NoCardFed",
          "Feeder2Error",
          "CardSourceEmpty",
          "CardDestFull",
          "Stacker2Error",
          "TrayRejectFull",
          "MagBothStackerOut",
          "ChipReaderError",
          "TrayEjectOpen",
          "StackerError",
          "TransportInputTimeout",
          "Unknown",
          "TransportWaitingCard",
          "Busy"
        ],
        "type": "string"
      },
      "BoxModuleTransportStatusChangedNotification": {
        "type": "object",
        "properties": {
          "nodeId": {
            "type": "string",
            "nullable": true
          },
          "previousStatus": {
            "$ref": "#/components/schemas/BoxModuleTransportStatus"
          },
          "currentStatus": {
            "$ref": "#/components/schemas/BoxModuleTransportStatus"
          },
          "moduleId": {
            "type": "string",
            "nullable": true
          },
          "modbusId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CameraSettingsDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "gainDb": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "exposureMicroseconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "binningMode": {
            "$ref": "#/components/schemas/BinningMode"
          },
          "mirroringMode": {
            "$ref": "#/components/schemas/MirroringMode"
          },
          "roi": {
            "$ref": "#/components/schemas/RectangleDto"
          },
          "rotationEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "rotationAngle": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CameraType": {
        "enum": [
          "MockCamera",
          "MvBlueFox",
          "VideoCapture"
        ],
        "type": "string"
      },
      "CanPrintDto": {
        "type": "object",
        "properties": {
          "canPrint": {
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CenterEntitiesDto": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "reference": {
            "$ref": "#/components/schemas/AlignReference"
          }
        },
        "additionalProperties": false
      },
      "ChipEncodingConfigurationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "readerAccessType": {
            "$ref": "#/components/schemas/ReaderAccessType"
          },
          "readerInterfaceType": {
            "$ref": "#/components/schemas/ReaderInterfaceType"
          }
        },
        "additionalProperties": false
      },
      "ChipReadBackConfigurationDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReadBackConfigurationDto"
          }
        ],
        "properties": {
          "readerAccessType": {
            "$ref": "#/components/schemas/ReaderAccessType"
          },
          "readerInterfaceType": {
            "$ref": "#/components/schemas/ReaderInterfaceType"
          }
        },
        "additionalProperties": false
      },
      "ChipReadBackMessage": {
        "type": "object",
        "properties": {
          "sourceJobInstanceId": {
            "type": "string",
            "nullable": true
          },
          "machineName": {
            "type": "string",
            "nullable": true
          },
          "machineSerial": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "jobId": {
            "type": "string",
            "nullable": true
          },
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "messageId": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceId": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceName": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "$ref": "#/components/schemas/MessageType"
          },
          "jobStatus": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "errorCode": {
            "$ref": "#/components/schemas/JobErrorCodes"
          },
          "additionalMetadata": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "documentProduced": {
            "type": "boolean"
          },
          "destructiveOperationExecuted": {
            "type": "boolean"
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "encoderIndex": {
            "type": "integer",
            "format": "int32"
          },
          "encoderId": {
            "type": "string",
            "nullable": true
          },
          "callbackUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CleanAtStartupStatus": {
        "enum": [
          "Disabled",
          "Idle",
          "WaitingForTemperature",
          "PerformingCleaning",
          "Done",
          "Failed"
        ],
        "type": "string"
      },
      "CleaningConfigurationDto": {
        "type": "object",
        "properties": {
          "normalPurgeDuration": {
            "type": "integer",
            "format": "int32"
          },
          "strongPurgeDuration": {
            "type": "integer",
            "format": "int32"
          },
          "wiperPassCount": {
            "type": "integer",
            "format": "int32"
          },
          "pumpSpeed": {
            "type": "integer",
            "format": "int32"
          },
          "mainSpittingCount": {
            "type": "integer",
            "format": "int32"
          },
          "mainSpittingFreq": {
            "type": "integer",
            "format": "int32"
          },
          "mainSpittingCycles": {
            "type": "integer",
            "format": "int32"
          },
          "finalSpittingCount": {
            "type": "integer",
            "format": "int32"
          },
          "finalSpittingFreq": {
            "type": "integer",
            "format": "int32"
          },
          "finalSpittingCycles": {
            "type": "integer",
            "format": "int32"
          },
          "inkPrimingTime": {
            "type": "integer",
            "format": "int32"
          },
          "vacuumPressureSetPoint": {
            "type": "integer",
            "format": "int32"
          },
          "spittingOffset": {
            "type": "integer",
            "format": "int32"
          },
          "autoClean": {
            "type": "boolean"
          },
          "cleanAtStartup": {
            "type": "boolean"
          },
          "cleanFrequency": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateDataSourceDto": {
        "type": "object",
        "properties": {
          "dataSourceType": {
            "$ref": "#/components/schemas/DataSourceType"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "queryTemplate": {
            "type": "string",
            "nullable": true
          },
          "connectionString": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateJobTemplateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateJobTemplateLayoutAutoPosSettingsDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "threshold": {
            "type": "number",
            "format": "float"
          },
          "templateMatchingConfigurationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateLineDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "$ref": "#/components/schemas/Point2fDto"
          },
          "end": {
            "$ref": "#/components/schemas/Point2fDto"
          }
        },
        "additionalProperties": false
      },
      "CuringSettingsDto": {
        "type": "object",
        "properties": {
          "curingEnabled": {
            "type": "boolean"
          },
          "dualCuringEnabled": {
            "type": "boolean"
          },
          "fumeExtractorEnabled": {
            "type": "boolean"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "speed": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DRectangleDto": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "dataType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataBindingDto": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "columnName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "cardSide": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataExchangeTableDefinition": {
        "type": "object",
        "properties": {
          "sql": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataRecordField"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataRecordField": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataSourceConfigurationDto": {
        "required": [
          "discriminator"
        ],
        "type": "object",
        "properties": {
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataSourceType": {
            "$ref": "#/components/schemas/DataSourceType"
          },
          "canBeDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "discriminator",
          "mapping": {
            "IXLA.Box.Automapper.MySqlDataSourceConfigurationDto": "#/components/schemas/MySqlDataSourceConfigurationDto",
            "IXLA.Box.Automapper.NpgSqlDataSourceConfigurationDto": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
          }
        }
      },
      "DataSourceType": {
        "enum": [
          "RelationalDatabaseMySql",
          "RelationalDatabasePostgres"
        ],
        "type": "string"
      },
      "DeviceDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "moduleId": {
            "type": "string",
            "nullable": true
          },
          "deviceType": {
            "$ref": "#/components/schemas/DeviceType"
          }
        },
        "additionalProperties": false
      },
      "DevicePropertyType": {
        "enum": [
          "Integer",
          "Float",
          "String",
          "Boolean"
        ],
        "type": "string"
      },
      "DeviceToggleState": {
        "enum": [
          "Unknown",
          "Enabled",
          "Disabled"
        ],
        "type": "string"
      },
      "DeviceType": {
        "enum": [
          "Camera",
          "Encoder",
          "LightSource",
          "Transport",
          "LaserBoard",
          "Laser",
          "BarcodeReader",
          "MagneticStripeEncoder",
          "InkjetBoard"
        ],
        "type": "string"
      },
      "DiagnosticActivity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "repetition": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "errorReason": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/DiagnosticActivityState"
          },
          "elapsedMilliseconds": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DiagnosticActivityState": {
        "enum": [
          "Idle",
          "Running",
          "Completed",
          "Failed",
          "Cancelled"
        ],
        "type": "string"
      },
      "DiagnosticTaskState": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DiagnosticTaskType"
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiagnosticActivity"
            },
            "nullable": true
          },
          "isRunning": {
            "type": "boolean",
            "readOnly": true
          },
          "currentActivity": {
            "$ref": "#/components/schemas/DiagnosticActivity"
          },
          "totalActivitiesCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "completedActivitiesCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "failedActivitiesCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "idleActivitiesCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "averageExecutionTime": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "errorReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiagnosticTaskType": {
        "enum": [
          "None",
          "Transport",
          "Autopos",
          "Ocr",
          "Laser",
          "MagStripe"
        ],
        "type": "string"
      },
      "DipSwitchSetting": {
        "enum": [
          "SingleFeeder",
          "DualFeeder",
          "Stacker",
          "MagStripeReader",
          "MultiChip",
          "InkJet",
          "Unused_1",
          "Unused_2"
        ],
        "type": "string"
      },
      "DisplayActionResult": {
        "type": "object",
        "properties": {
          "succeeded": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "$ref": "#/components/schemas/DisplayErrors"
          }
        },
        "additionalProperties": false
      },
      "DisplayErrors": {
        "enum": [
          "E_DISPLAY_NOT_AVAILABLE",
          "E_INVALID_PARAMS"
        ],
        "type": "string"
      },
      "DisplayIssuanceStatusDto": {
        "type": "object",
        "properties": {
          "jobsPerHour": {
            "type": "integer",
            "format": "int32"
          },
          "jobAvgDuration": {
            "type": "integer",
            "format": "int32"
          },
          "jobsRunning": {
            "type": "integer",
            "format": "int32"
          },
          "jobsCompleted": {
            "type": "integer",
            "format": "int32"
          },
          "jobsFaulted": {
            "type": "integer",
            "format": "int32"
          },
          "jobsInQueue": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DisplayLaserStatusDto": {
        "type": "object",
        "properties": {
          "laserStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisplaySystemStatusDto": {
        "type": "object",
        "properties": {
          "serverStatus": {
            "type": "string",
            "nullable": true
          },
          "upTime": {
            "type": "string",
            "example": "25:01:01.001"
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "softwareVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisplayTransportStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "closedPhotoSensors": {
            "type": "string",
            "nullable": true
          },
          "doors": {
            "type": "string",
            "nullable": true
          },
          "firmwareRevision": {
            "type": "string",
            "nullable": true
          },
          "hardwareRevision": {
            "type": "string",
            "nullable": true
          },
          "positions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EncoderLoadedMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "properties": {
          "encoderId": {
            "type": "string",
            "nullable": true
          },
          "encoderIndex": {
            "type": "integer",
            "format": "int32"
          },
          "callbackUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityDescriptor": {
        "type": "object",
        "properties": {
          "entityIndex": {
            "type": "integer",
            "format": "int32"
          },
          "entityName": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "$ref": "#/components/schemas/EntityFieldValueType"
          },
          "dbValueType": {
            "type": "string",
            "nullable": true
          },
          "pageName": {
            "type": "string",
            "nullable": true
          },
          "isConstant": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EntityFieldValueType": {
        "enum": [
          "None",
          "String",
          "Image",
          "InkjetImage"
        ],
        "type": "string"
      },
      "EntityType": {
        "enum": [
          "Bitmap",
          "Text",
          "Barcode",
          "LineArray",
          "LineArrays",
          "PolyLine",
          "PolyLines",
          "Rectangle",
          "Layer",
          "SerialNumber",
          "Group",
          "Barcode12Chard2D",
          "PixelArray2d",
          "PixelArrays2d",
          "ScannerPixelArray2d"
        ],
        "type": "string"
      },
      "ExternalProcessCompletedMessage": {
        "type": "object",
        "properties": {
          "errorReason": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceId": {
            "type": "string",
            "nullable": true
          },
          "requiredAction": {
            "$ref": "#/components/schemas/WorkflowAction"
          },
          "outcome": {
            "$ref": "#/components/schemas/ExternalProcessOutcome"
          }
        },
        "additionalProperties": false
      },
      "ExternalProcessOutcome": {
        "enum": [
          "Completed",
          "Faulted",
          "Canceled"
        ],
        "type": "string"
      },
      "FeederEmptyMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "additionalProperties": false
      },
      "FeederState": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/FeederStatus"
          }
        },
        "additionalProperties": false
      },
      "FeederStatus": {
        "enum": [
          "Disconnected",
          "FeederEmpty",
          "Ready"
        ],
        "type": "string"
      },
      "FileDto": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "nullable": true
          },
          "originalFilename": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "checksum": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          }
        },
        "additionalProperties": false
      },
      "FileDtoSearchResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FileServiceSettings": {
        "type": "object",
        "properties": {
          "root": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterDto": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HatchFlags": {
        "enum": [
          "NoSort",
          "AllLines",
          "PolyLineBeamCompensate",
          "DontFillRest",
          "KeepAngle",
          "EqualizeDistance",
          "BeamCompensationLoopReverseOrder"
        ],
        "type": "string"
      },
      "HatchPairDto": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "hatch1": {
            "$ref": "#/components/schemas/HatchSettingsDto"
          },
          "hatch2": {
            "$ref": "#/components/schemas/HatchSettingsDto"
          }
        },
        "additionalProperties": false
      },
      "HatchSettingsDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "flags": {
            "$ref": "#/components/schemas/HatchFlags"
          },
          "hatchDistance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hatchAngle": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hatchStyle": {
            "$ref": "#/components/schemas/HatchStyle"
          },
          "beamCompensation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HatchStyle": {
        "enum": [
          "Disable",
          "WavyLineWithJumps",
          "LeftToRightWithoutJumps",
          "RightToLeftWithoutJumps",
          "WavyLineIncludingJumps",
          "ZigZag"
        ],
        "type": "string"
      },
      "HeadAxisPositionFlags": {
        "enum": [
          "Capping",
          "Print",
          "Wiper",
          "Calib"
        ],
        "type": "string"
      },
      "HelloWorldDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HomographySettingsDto": {
        "type": "object",
        "properties": {
          "cameraId": {
            "type": "string",
            "nullable": true
          },
          "pixelsPerMillimeterX": {
            "type": "number",
            "format": "float"
          },
          "pixelsPerMillimeterY": {
            "type": "number",
            "format": "float"
          },
          "unwarpPerspectiveOutputSizeX": {
            "type": "number",
            "format": "float"
          },
          "unwarpPerspectiveOutputSizeY": {
            "type": "number",
            "format": "float"
          },
          "dstPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Point2fDto"
            },
            "nullable": true
          },
          "srcPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Point2fDto"
            },
            "nullable": true
          },
          "homographyMatrix": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            },
            "nullable": true
          },
          "inverseHomography": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityResult": {
        "type": "object",
        "properties": {
          "succeeded": {
            "type": "boolean",
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityError"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InkLevelStatusFlags": {
        "enum": [
          "NoWarning",
          "Ink1LowLevel",
          "Ink2LowLevel",
          "Ink3LowLevel",
          "Ink4LowLevel",
          "Ink5LowLevel",
          "Ink6LowLevel",
          "Ink7LowLevel",
          "Ink8LowLevel"
        ],
        "type": "string"
      },
      "InkjetEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "x": {
            "type": "number",
            "format": "float"
          },
          "y": {
            "type": "number",
            "format": "float"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InkjetLayoutDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InkjetEntityDto"
            },
            "nullable": true
          },
          "canBeDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "InkjetMaintenanceStatusDto": {
        "type": "object",
        "properties": {
          "temperatureStatus": {
            "$ref": "#/components/schemas/TemperatureStatus"
          },
          "cleanAtStartupStatus": {
            "$ref": "#/components/schemas/CleanAtStartupStatus"
          },
          "canPrint": {
            "type": "boolean"
          },
          "cantPrintReason": {
            "type": "string",
            "nullable": true
          },
          "remainingPrintsBeforeCleaning": {
            "type": "integer",
            "format": "int32"
          },
          "remainingTimeBeforeAutoParking": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InkjetTemperaturesDto": {
        "type": "object",
        "properties": {
          "heaterTemperatureSet": {
            "type": "number",
            "format": "float"
          },
          "heaterTemperature": {
            "type": "number",
            "format": "float"
          },
          "printheadTemperature": {
            "type": "number",
            "format": "float"
          },
          "boardTemperature": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "InterlockStatus": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isOpen": {
            "type": "boolean"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Job": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "workflowId": {
            "type": "string",
            "nullable": true
          },
          "jobStatus": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "workflowStatus": {
            "type": "string",
            "nullable": true
          },
          "currentActivityId": {
            "type": "string",
            "nullable": true
          },
          "currentActivityDisplayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jobStatus": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "workflowStatus": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobErrorCodes": {
        "enum": [
          "NoErrors",
          "ManualStop",
          "GenericError",
          "CardJam",
          "MarkLayoutFailed",
          "OpenInterlock",
          "MarkErrorLayoutOutOfBounds",
          "MarkErrorEntitySelectionEmpty",
          "MarkErrorMarkAlreadyExecuting",
          "ChipPersonalizationFailed",
          "MagStripeReadFailed",
          "MagStripeWriteFailed",
          "OcrUnexpectedResult",
          "OcrFailedToAcquireImage",
          "OcrFailedToExecuteAlgorithm",
          "AutoPosFailedToMatchPattern",
          "WebhookAckTimeout",
          "WebhooksServerUnreachable",
          "FeederEmpty",
          "CancelledOnStartup",
          "OcrExternalValidationKo",
          "FailedToLoadJobTemplate",
          "InvalidTransportStatus",
          "ReadBackValidationFailed"
        ],
        "type": "string"
      },
      "JobInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "jobId": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceId": {
            "type": "string",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "jobStatus": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "errorCodes": {
            "$ref": "#/components/schemas/JobErrorCodes"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "persoOperations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersoOperationInstance"
            },
            "nullable": true
          },
          "executingOperationId": {
            "type": "string",
            "nullable": true
          },
          "currentPositionId": {
            "type": "string",
            "nullable": true
          },
          "documentProduced": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "JobStatus": {
        "enum": [
          "None",
          "Waiting",
          "Starting",
          "Resuming",
          "Running",
          "Completed",
          "Cancelled",
          "Suspended",
          "Rejected",
          "Faulted"
        ],
        "type": "string"
      },
      "JobTemplateAuditEntryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "operation": {
            "type": "string",
            "nullable": true
          },
          "layoutName": {
            "type": "string",
            "nullable": true
          },
          "ocrName": {
            "type": "string",
            "nullable": true
          },
          "autoposName": {
            "type": "string",
            "nullable": true
          },
          "webhookName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "expectedMarkDuration": {
            "type": "string",
            "example": "25:01:01.001"
          },
          "workingArea": {
            "$ref": "#/components/schemas/DRectangleDto"
          },
          "readBackConfiguration": {
            "$ref": "#/components/schemas/ReadBackConfigurationDto"
          },
          "chipEncodingConfiguration": {
            "$ref": "#/components/schemas/ChipEncodingConfigurationDto"
          },
          "magStripeConfiguration": {
            "$ref": "#/components/schemas/MagneticStripeConfigurationDto"
          },
          "webhooksTarget": {
            "$ref": "#/components/schemas/WebhooksTargetDto"
          },
          "file": {
            "$ref": "#/components/schemas/FileDto"
          },
          "dataSourceConfiguration": {
            "$ref": "#/components/schemas/DataSourceConfigurationDto"
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobTemplateLayoutDto"
            },
            "nullable": true
          },
          "inkjetLayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobTemplateInkjetLayoutDto"
            },
            "nullable": true
          },
          "markGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScannerMarkGroupDto"
            },
            "nullable": true
          },
          "ocrSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobTemplateOcrSettingsDto"
            },
            "nullable": true
          },
          "autoPosEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "JobTemplateInkjetLayoutDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "layout": {
            "$ref": "#/components/schemas/InkjetLayoutDto"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "layoutId": {
            "type": "integer",
            "format": "int32"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobTemplateLayoutAutoPosSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "threshold": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "layoutId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "layoutName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "templateMatchingConfigurationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "templateMatchingConfiguration": {
            "$ref": "#/components/schemas/TemplateMatchingConfiguration"
          },
          "isConfigured": {
            "type": "boolean",
            "readOnly": true
          },
          "jobTemplateLayoutId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "JobTemplateLayoutAutoPosSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "layoutId": {
            "type": "integer",
            "format": "int32"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "layoutName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "threshold": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "debugUrl": {
            "type": "string",
            "nullable": true
          },
          "templateMatchingConfiguration": {
            "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
          },
          "isConfigured": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "JobTemplateLayoutDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "layout": {
            "$ref": "#/components/schemas/LayoutDto"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "layoutId": {
            "type": "integer",
            "format": "int32"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "mirrorX": {
            "type": "boolean",
            "nullable": true
          },
          "mirrorY": {
            "type": "boolean",
            "nullable": true
          },
          "autoPosSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobTemplateOcrSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "ocrSettingsId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "runBeforeMark": {
            "type": "boolean",
            "nullable": true
          },
          "resultFieldName": {
            "type": "string",
            "nullable": true
          },
          "sendWebhookNotification": {
            "type": "boolean"
          },
          "supportSide": {
            "$ref": "#/components/schemas/SupportSide"
          },
          "ocrSettings": {
            "$ref": "#/components/schemas/OcrSettingsDto"
          }
        },
        "additionalProperties": false
      },
      "LampColors": {
        "enum": [
          "Auto",
          "Red",
          "Orange",
          "Green",
          "Cyan",
          "Blue",
          "Magenta",
          "BlinkingRed",
          "BlinkingOrange",
          "BlinkingGreen",
          "BlinkingCyan",
          "BlinkingBlue",
          "BlinkingMagenta"
        ],
        "type": "string"
      },
      "LampConfig": {
        "type": "object",
        "properties": {
          "serialPortName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LampState": {
        "enum": [
          "Idle",
          "Error",
          "Armed",
          "Working"
        ],
        "type": "string"
      },
      "LaserBoardConfig": {
        "type": "object",
        "properties": {
          "boardType": {
            "type": "string",
            "nullable": true
          },
          "serialPortName": {
            "type": "string",
            "nullable": true
          },
          "slaveId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LaserBoardState": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "firmwareVersion": {
            "type": "string",
            "nullable": true
          },
          "hardwareType": {
            "type": "string",
            "nullable": true
          },
          "systemType": {
            "type": "string",
            "nullable": true
          },
          "interlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InterlockStatus"
            },
            "nullable": true
          },
          "laserPen": {
            "$ref": "#/components/schemas/DeviceToggleState"
          },
          "redPointer": {
            "$ref": "#/components/schemas/DeviceToggleState"
          },
          "illumination": {
            "$ref": "#/components/schemas/DeviceToggleState"
          },
          "hasOpenInterlocks": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LaserBoardStateChangedEventArgs": {
        "type": "object",
        "properties": {
          "currentState": {
            "$ref": "#/components/schemas/LaserBoardState"
          },
          "previousState": {
            "$ref": "#/components/schemas/LaserBoardState"
          }
        },
        "additionalProperties": false
      },
      "LaserBoardStateChangedEventNotification": {
        "type": "object",
        "properties": {
          "nodeId": {
            "type": "string",
            "nullable": true
          },
          "moduleId": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "eventData": {
            "$ref": "#/components/schemas/LaserBoardStateChangedEventArgs"
          }
        },
        "additionalProperties": false
      },
      "LayoutDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "file": {
            "$ref": "#/components/schemas/FileDto"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScannerEntityDto"
            },
            "nullable": true
          },
          "autoPosSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettingsDto"
            },
            "nullable": true
          },
          "canBeDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LayoutStoreSettings": {
        "type": "object",
        "properties": {
          "imagesBucketName": {
            "type": "string",
            "nullable": true
          },
          "uploadBucketName": {
            "type": "string",
            "nullable": true
          },
          "layoutsBucketName": {
            "type": "string",
            "nullable": true
          },
          "jobTemplatesBucketName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogEntryDto": {
        "type": "object",
        "properties": {
          "clusterName": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "exceptionType": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "string",
            "nullable": true
          },
          "machineName": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "messageTemplate": {
            "type": "string",
            "nullable": true
          },
          "nodeId": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "serverVersion": {
            "type": "string",
            "nullable": true
          },
          "threadId": {
            "type": "integer",
            "format": "int32"
          },
          "moduleName": {
            "type": "string",
            "nullable": true
          },
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceId": {
            "type": "string",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogEventTypeDto": {
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "messageTemplate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogFilterablesDto": {
        "type": "object",
        "properties": {
          "logLevels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "moduleNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "eventTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogEventTypeDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MachineModel": {
        "enum": [
          "VirtualDevice",
          "ID5",
          "ID6",
          "ID7",
          "IDX",
          "XP24",
          "XP24J",
          "BOX"
        ],
        "type": "string"
      },
      "MachineStateNotifierEvents": {
        "enum": [
          "BoxModuleTransportStatusChanged",
          "ModuleStateChanged",
          "LaserBoardStateChanged",
          "SerialDataSent",
          "SerialDataReceived",
          "SystemStatusChanged",
          "WorkflowSchedulerStateChanged",
          "WorkflowInstanceStateChanged"
        ],
        "type": "string"
      },
      "MachineStatusDto": {
        "type": "object",
        "properties": {
          "transport": {
            "$ref": "#/components/schemas/TransportState"
          },
          "laserBoards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LaserBoardState"
            },
            "nullable": true
          },
          "hasOpenInterlocks": {
            "type": "boolean"
          },
          "allFeedersEmpty": {
            "type": "boolean"
          },
          "schedulerStatus": {
            "$ref": "#/components/schemas/WorkflowSchedulerStatus"
          }
        },
        "additionalProperties": false
      },
      "MagStripeDataDto": {
        "type": "object",
        "properties": {
          "track1": {
            "type": "string",
            "nullable": true
          },
          "track2": {
            "type": "string",
            "nullable": true
          },
          "track3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MagStripeTestType": {
        "enum": [
          "Read",
          "Write",
          "WriteAndVerify"
        ],
        "type": "string"
      },
      "MagneticReadBackConfigurationDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReadBackConfigurationDto"
          }
        ],
        "properties": {
          "readFromTrack1": {
            "type": "boolean"
          },
          "readFromTrack2": {
            "type": "boolean"
          },
          "readFromTrack3": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MagneticStripeConfigurationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "operations": {
            "$ref": "#/components/schemas/MagneticStripeOperations"
          },
          "highCoercivity": {
            "type": "boolean",
            "nullable": true
          },
          "track1Enabled": {
            "type": "boolean",
            "nullable": true
          },
          "track2Enabled": {
            "type": "boolean",
            "nullable": true
          },
          "track3Enabled": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MagneticStripeOperations": {
        "enum": [
          "None",
          "Write",
          "Read",
          "WriteAndVerify"
        ],
        "type": "string"
      },
      "MagneticStripeReadBackMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "properties": {
          "track1Base64": {
            "type": "string",
            "nullable": true
          },
          "track2Base64": {
            "type": "string",
            "nullable": true
          },
          "track3Base64": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarkEntitiesDto": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarkEntitiesErrorCodes": {
        "enum": [
          "NoErrors",
          "OpenInterlocks",
          "MarkEntitiesLayoutOutOfBounds",
          "MarkingProcessAlreadyExecuting",
          "MarkingProcessAborted",
          "MarkEntitiesSelectionEmpty",
          "MarkEntitiesApiError",
          "ManualStop"
        ],
        "type": "string"
      },
      "MarkEntitiesResult": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/MarkEntitiesStatus"
          },
          "errorCode": {
            "$ref": "#/components/schemas/MarkEntitiesErrorCodes"
          }
        },
        "additionalProperties": false
      },
      "MarkEntitiesStatus": {
        "enum": [
          "Completed",
          "Faulted",
          "Canceled",
          "Aborted"
        ],
        "type": "string"
      },
      "MarkGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "scannerId": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "offsetX": {
            "type": "number",
            "format": "double"
          },
          "offsetY": {
            "type": "number",
            "format": "double"
          },
          "rotationAngle": {
            "type": "number",
            "format": "double"
          },
          "autoPosSettings": {
            "$ref": "#/components/schemas/JobTemplateLayoutAutoPosSettings"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarkGroupScannerEntity"
            },
            "nullable": true
          },
          "expectedMarkDurationMs": {
            "type": "number",
            "format": "double"
          },
          "measuredMarkDurationMs": {
            "type": "number",
            "format": "double"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MarkGroupScannerEntity": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "entityId": {
            "type": "integer",
            "format": "int32"
          },
          "markGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarkGroupScannerEntityDto": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "entityId": {
            "type": "integer",
            "format": "int32"
          },
          "markGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "$ref": "#/components/schemas/ScannerEntityDto"
          }
        },
        "additionalProperties": false
      },
      "MarkGroupSummaryModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "layoutName": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "scannerId": {
            "type": "string",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "offsetX": {
            "type": "number",
            "format": "double"
          },
          "offsetY": {
            "type": "number",
            "format": "double"
          },
          "mirrorX": {
            "type": "boolean"
          },
          "mirrorY": {
            "type": "boolean"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "autoPosSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutoPosConfigSummaryModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageType": {
        "enum": [
          "Unknown",
          "EncoderLoaded",
          "OcrExecuted",
          "WorkflowStarted",
          "WorkflowCompleted",
          "WorkflowFaulted",
          "WorkflowCancelled",
          "FeederEmpty",
          "WorkflowSchedulerStarted",
          "WorkflowSchedulerStopped",
          "WorkflowSchedulerSuspended",
          "HealthCheck",
          "MagneticStripeReadBack",
          "OcrReadBack",
          "ChipReadBack",
          "BarcodeReadBack"
        ],
        "type": "string"
      },
      "MirroringMode": {
        "enum": [
          "Off",
          "InvertY",
          "InvertX",
          "Both"
        ],
        "type": "string"
      },
      "ModuleDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "baseAddress": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceDefinition"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModulePositionsFlags": {
        "enum": [
          "NoCard",
          "Flipover",
          "Laser",
          "InkJet",
          "PinchRoller1",
          "PinchRoller2",
          "FlipoverFlipped",
          "StackerNotPresent",
          "NoCardInFeeder1",
          "NoCardInFeeder2"
        ],
        "type": "string"
      },
      "MoveToDto": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "transformOrigin": {
            "$ref": "#/components/schemas/RectTransformOrigin"
          }
        },
        "additionalProperties": false
      },
      "MySqlDataSourceConfigurationDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceConfigurationDto"
          }
        ],
        "properties": {
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "queryTemplate": {
            "type": "string",
            "nullable": true
          },
          "connectionString": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NameValidationErrorReason": {
        "enum": [
          "None",
          "EmptyName",
          "NameAlreadyTaken",
          "NameContainsInvalidCharacters"
        ],
        "type": "string"
      },
      "NameValidationResultDto": {
        "type": "object",
        "properties": {
          "input": {
            "type": "string",
            "nullable": true
          },
          "valid": {
            "type": "boolean"
          },
          "suggested": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValidationErrorReason"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotFoundResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NpgSqlDataSourceConfigurationDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceConfigurationDto"
          }
        ],
        "properties": {
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "queryTemplate": {
            "type": "string",
            "nullable": true
          },
          "connectionString": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OCRResult": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "meanConfidence": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "OcrExecutedMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuntimeOcrInspectionResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OcrReadBackConfigurationDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReadBackConfigurationDto"
          }
        ],
        "properties": {
          "ocrSettingsId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OcrReadBackMessage": {
        "type": "object",
        "properties": {
          "sourceJobInstanceId": {
            "type": "string",
            "nullable": true
          },
          "machineName": {
            "type": "string",
            "nullable": true
          },
          "machineSerial": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "jobId": {
            "type": "string",
            "nullable": true
          },
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "messageId": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceId": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceName": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "$ref": "#/components/schemas/MessageType"
          },
          "jobStatus": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "errorCode": {
            "$ref": "#/components/schemas/JobErrorCodes"
          },
          "additionalMetadata": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "documentProduced": {
            "type": "boolean"
          },
          "destructiveOperationExecuted": {
            "type": "boolean"
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "meanConfidence": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "OcrResultDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "meanConfidence": {
            "type": "number",
            "format": "float"
          },
          "durationMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "OcrSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "roi": {
            "$ref": "#/components/schemas/RectangleDto"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "pageSegmentationMode": {
            "$ref": "#/components/schemas/PageSegmentationMode"
          },
          "whiteList": {
            "type": "string",
            "nullable": true
          },
          "blackList": {
            "type": "string",
            "nullable": true
          },
          "languages": {
            "type": "string",
            "nullable": true
          },
          "multiply": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "threshold": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rotation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "matchPattern": {
            "type": "string",
            "nullable": true
          },
          "meanConfidenceThreshold": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "imageAcquisitionPreset": {
            "type": "string",
            "nullable": true
          },
          "scannerId": {
            "type": "string",
            "nullable": true
          },
          "cameraId": {
            "type": "string",
            "nullable": true
          },
          "canBeDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OpticSettings": {
        "type": "object",
        "properties": {
          "cameraPresetName": {
            "type": "string",
            "nullable": true
          },
          "warpPerspectiveOutputSizeX": {
            "type": "number",
            "format": "double"
          },
          "warpPerspectiveOutputSizeY": {
            "type": "number",
            "format": "double"
          },
          "pixelsPerMillimeterX": {
            "type": "number",
            "format": "double"
          },
          "pixelsPerMillimeterY": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PCSCActionResultDto": {
        "type": "object",
        "properties": {
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PageSegmentationMode": {
        "enum": [
          "OsdOnly",
          "AutoOsd",
          "AutoOnly",
          "Auto",
          "SingleColumn",
          "SingleBlockVertText",
          "SingleBlock",
          "SingleLine",
          "SingleWord",
          "CircleWord",
          "SingleChar",
          "SparseText",
          "SparseTextOsd",
          "RawLine",
          "Count"
        ],
        "type": "string"
      },
      "PcScConnectResult": {
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/PcScErrorCode"
          },
          "success": {
            "type": "boolean"
          },
          "readerName": {
            "type": "string",
            "nullable": true
          },
          "activeSCardProtocol": {
            "$ref": "#/components/schemas/SCardProtocol"
          },
          "share": {
            "$ref": "#/components/schemas/SCardShare"
          }
        },
        "additionalProperties": false
      },
      "PcScErrorCode": {
        "enum": [
          "SCARD_S_SUCCESS",
          "ERROR_BROKEN_PIPE",
          "ERROR_IO_DEVICE",
          "SCARD_F_INTERNAL_ERROR",
          "SCARD_E_CANCELLED",
          "SCARD_E_INVALID_HANDLE",
          "SCARD_E_INVALID_PARAMETER",
          "SCARD_E_INVALID_TARGET",
          "SCARD_E_NO_MEMORY",
          "SCARD_F_WAITED_TOO_LONG",
          "SCARD_E_INSUFFICIENT_BUFFER",
          "SCARD_E_UNKNOWN_READER",
          "SCARD_E_TIMEOUT",
          "SCARD_E_SHARING_VIOLATION",
          "SCARD_E_NO_SMARTCARD",
          "SCARD_E_UNKNOWN_CARD",
          "SCARD_E_CANT_DISPOSE",
          "SCARD_E_PROTO_MISMATCH",
          "SCARD_E_NOT_READY",
          "SCARD_E_INVALID_VALUE",
          "SCARD_E_SYSTEM_CANCELLED",
          "SCARD_F_COMM_ERROR",
          "SCARD_F_UNKNOWN_ERROR",
          "SCARD_E_INVALID_ATR",
          "SCARD_E_NOT_TRANSACTED",
          "SCARD_E_READER_UNAVAILABLE",
          "SCARD_P_SHUTDOWN",
          "SCARD_E_PCI_TOO_SMALL",
          "SCARD_E_READER_UNSUPPORTED",
          "SCARD_E_DUPLICATE_READER",
          "SCARD_E_CARD_UNSUPPORTED",
          "SCARD_E_NO_SERVICE",
          "SCARD_E_SERVICE_STOPPED",
          "SCARD_E_UNEXPECTED",
          "SCARD_E_ICC_INSTALLATION",
          "SCARD_E_ICC_CREATEORDER",
          "SCARD_E_UNSUPPORTED_FEATURE",
          "SCARD_E_DIR_NOT_FOUND",
          "SCARD_E_FILE_NOT_FOUND",
          "SCARD_E_NO_DIR",
          "SCARD_E_NO_FILE",
          "SCARD_E_NO_ACCESS",
          "SCARD_E_WRITE_TOO_MANY",
          "SCARD_E_BAD_SEEK",
          "SCARD_E_INVALID_CHV",
          "SCARD_E_UNKNOWN_RES_MNG",
          "SCARD_E_NO_SUCH_CERTIFICATE",
          "SCARD_E_CERTIFICATE_UNAVAILABLE",
          "SCARD_E_NO_READERS_AVAILABLE",
          "SCARD_E_COMM_DATA_LOST",
          "SCARD_E_NO_KEY_CONTAINER",
          "SCARD_E_SERVER_TOO_BUSY",
          "SCARD_E_PIN_CACHE_EXPIRED",
          "SCARD_E_NO_PIN_CACHE",
          "SCARD_E_READ_ONLY_CARD",
          "SCARD_W_UNSUPPORTED_CARD",
          "SCARD_W_UNRESPONSIVE_CARD",
          "SCARD_W_UNPOWERED_CARD",
          "SCARD_W_RESET_CARD",
          "SCARD_W_REMOVED_CARD",
          "SCARD_W_SECURITY_VIOLATION",
          "SCARD_W_WRONG_CHV",
          "SCARD_W_CHV_BLOCKED",
          "SCARD_W_EOF",
          "SCARD_W_CANCELLED_BY_USER",
          "SCARD_W_CARD_NOT_AUTHENTICATED",
          "SCARD_W_CACHE_ITEM_NOT_FOUND",
          "SCARD_W_CACHE_ITEM_STALE",
          "SCARD_W_CACHE_ITEM_TOO_BIG"
        ],
        "type": "string"
      },
      "PcScManagerConfiguration": {
        "type": "object",
        "properties": {
          "defaultScope": {
            "$ref": "#/components/schemas/SCardScope"
          },
          "tracePcScCalls": {
            "type": "boolean"
          },
          "logSensitiveData": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PenDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "laserPower": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "markSpeed": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frequency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pulseLength": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "firstPulseLength": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "halfPeriod": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "jumpDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "markDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "polyDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "laserOnDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "laserOffDelay": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "jumpSpeed": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pixelMap": {
            "$ref": "#/components/schemas/PixelMapDto"
          },
          "flags": {
            "$ref": "#/components/schemas/PenFlagsDto"
          }
        },
        "additionalProperties": false
      },
      "PenFlagsDto": {
        "type": "object",
        "properties": {
          "enableLongDelay": {
            "type": "boolean",
            "nullable": true
          },
          "enablePowerControl": {
            "type": "boolean",
            "nullable": true
          },
          "enableWobble": {
            "type": "boolean",
            "nullable": true
          },
          "enablePort1": {
            "type": "boolean",
            "nullable": true
          },
          "enableSkyWriting": {
            "type": "boolean",
            "nullable": true
          },
          "applyPowerChangesAfterJumps": {
            "type": "boolean",
            "nullable": true
          },
          "enableDrill": {
            "type": "boolean",
            "nullable": true
          },
          "useGeometry": {
            "type": "boolean",
            "nullable": true
          },
          "enablePixelHardwareMode": {
            "type": "boolean",
            "nullable": true
          },
          "enablePixelMap": {
            "type": "boolean",
            "nullable": true
          },
          "enableUseVectorDelays": {
            "type": "boolean",
            "nullable": true
          },
          "enableYagStandBy": {
            "type": "boolean",
            "nullable": true
          },
          "enableDa1": {
            "type": "boolean",
            "nullable": true
          },
          "enableDa2": {
            "type": "boolean",
            "nullable": true
          },
          "enablePointPowerMap": {
            "type": "boolean",
            "nullable": true
          },
          "enableUsePenPowerAsMaxPower": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersoOperation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceId": {
            "type": "string",
            "nullable": true
          },
          "operationType": {
            "$ref": "#/components/schemas/PersoOperationTypes"
          },
          "requiredPositionId": {
            "type": "string",
            "nullable": true
          },
          "parkingPositionId": {
            "type": "string",
            "nullable": true
          },
          "maxRetries": {
            "type": "integer",
            "format": "int32"
          },
          "outcome": {
            "$ref": "#/components/schemas/PersoOperationOutcome"
          },
          "isDestructiveOperation": {
            "type": "boolean",
            "readOnly": true
          },
          "canBeRetried": {
            "type": "boolean",
            "readOnly": true
          },
          "unlocksWorkflowStart": {
            "type": "boolean"
          },
          "requiredSide": {
            "$ref": "#/components/schemas/SupportSide"
          },
          "executed": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PersoOperationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PersoOperationStatus"
          }
        },
        "additionalProperties": false
      },
      "PersoOperationInstance": {
        "type": "object",
        "properties": {
          "jobInstanceId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "operationId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PersoOperationStatus"
          },
          "outcome": {
            "$ref": "#/components/schemas/PersoOperationOutcome"
          },
          "operationType": {
            "$ref": "#/components/schemas/PersoOperationTypes"
          }
        },
        "additionalProperties": false
      },
      "PersoOperationOutcome": {
        "enum": [
          "Succeeded",
          "Failed",
          "Cancelled",
          "Aborted"
        ],
        "type": "string"
      },
      "PersoOperationStatus": {
        "enum": [
          "Idle",
          "Scheduled",
          "Executing",
          "Suspended",
          "Cancelled",
          "Finished"
        ],
        "type": "string"
      },
      "PersoOperationTypes": {
        "enum": [
          "Feed",
          "Mark",
          "Ocr",
          "MagneticEncoding",
          "ChipEncoding",
          "Eject",
          "Reject",
          "AllowNextWorkflowStart",
          "AutoPos",
          "FetchPersoData",
          "ReadBack",
          "InkjetPrint"
        ],
        "type": "string"
      },
      "PersoProcessConfigurationDto": {
        "type": "object",
        "properties": {
          "feedSide": {
            "$ref": "#/components/schemas/SupportSide"
          },
          "readBack": {
            "$ref": "#/components/schemas/ReadBackType"
          }
        },
        "additionalProperties": false
      },
      "PersoSessionAggregateDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PersonalizationSessionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "jobTemplateName": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jobsCompleted": {
            "type": "integer",
            "format": "int32"
          },
          "jobsFaulted": {
            "type": "integer",
            "format": "int32"
          },
          "cardsProcessed": {
            "type": "integer",
            "format": "int32"
          },
          "cardsPerHour": {
            "type": "number",
            "format": "float"
          },
          "averagePersonalizationTime": {
            "type": "number",
            "format": "float"
          },
          "averageEngravingTime": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "PersonalizationSessionEventDto": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "recordId": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhotoSensor": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isClosed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PhotoSensorsFlags": {
        "enum": [
          "AllOpen",
          "Feeder1Home",
          "Feeder1CardPresent",
          "Input",
          "FlipHome",
          "Reject",
          "LaserInput",
          "Output",
          "StackerHome",
          "Feeder1ToPinchroll",
          "Feeder1CardBatch",
          "EncoderInOut1",
          "EncoderInOut2",
          "EncoderInOut3",
          "EncoderInOut4",
          "FeederTubePresent",
          "StackerTubePresent",
          "Feeder2Home",
          "Feeder2CardPresent",
          "Feeder2ToPinchroll",
          "ModuleOutput",
          "InkJetIn",
          "InkJetOut",
          "InkJetBeltHome",
          "Feeder2CardBatch",
          "SpindleHome",
          "Stacker2Home",
          "Stacker2TubePresent"
        ],
        "type": "string"
      },
      "PinningSettingsDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PixelMapDto": {
        "type": "object",
        "properties": {
          "zone01": {
            "type": "integer",
            "format": "int32"
          },
          "zone02": {
            "type": "integer",
            "format": "int32"
          },
          "zone03": {
            "type": "integer",
            "format": "int32"
          },
          "zone04": {
            "type": "integer",
            "format": "int32"
          },
          "zone05": {
            "type": "integer",
            "format": "int32"
          },
          "zone06": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Point2fDto": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "float"
          },
          "y": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "PrintCycleModes": {
        "enum": [
          "PrintAndLaser",
          "PrintAndEject",
          "PrintAndPrintWithCuring",
          "PrintAndPrintWithoutCuring"
        ],
        "type": "string"
      },
      "PrintSettingsDto": {
        "type": "object",
        "properties": {
          "printSpeed": {
            "type": "integer",
            "format": "int32"
          },
          "verticalMirrorEnabled": {
            "type": "boolean"
          },
          "horizontalMirrorEnabled": {
            "type": "boolean"
          },
          "cmykDirectEnabled": {
            "type": "boolean"
          },
          "enableC": {
            "type": "boolean"
          },
          "enableM": {
            "type": "boolean"
          },
          "enableY": {
            "type": "boolean"
          },
          "enableK": {
            "type": "boolean"
          },
          "dropSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PrinterStateDto": {
        "type": "object",
        "properties": {
          "vacuumPressureMillibar": {
            "type": "number",
            "format": "float"
          },
          "positions": {
            "$ref": "#/components/schemas/TransportAxisPositionFlags"
          },
          "headPosition": {
            "$ref": "#/components/schemas/HeadAxisPositionFlags"
          },
          "temperatureReadings": {
            "$ref": "#/components/schemas/TemperatureReadingsDto"
          },
          "voltageReadings": {
            "$ref": "#/components/schemas/VoltageReadingsDto"
          },
          "transportStatus": {
            "$ref": "#/components/schemas/XPrintTransportStatus"
          },
          "inkLevelStatus": {
            "$ref": "#/components/schemas/InkLevelStatusFlags"
          },
          "systemStatus": {
            "$ref": "#/components/schemas/SystemStatusFlags"
          },
          "doorsStatus": {
            "$ref": "#/components/schemas/XPrintDoorStatus"
          },
          "xAxis": {
            "type": "integer",
            "format": "int32"
          },
          "yAxis": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PropertyDto": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean"
          },
          "devicePropertyType": {
            "$ref": "#/components/schemas/DevicePropertyType"
          }
        },
        "additionalProperties": false
      },
      "ReadBackConfigurationDto": {
        "required": [
          "discriminator"
        ],
        "type": "object",
        "properties": {
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "readBackType": {
            "$ref": "#/components/schemas/ReadBackType"
          },
          "requiredSide": {
            "$ref": "#/components/schemas/SupportSide"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "discriminator",
          "mapping": {
            "IXLA.Box.Automapper.OcrReadBackConfigurationDto": "#/components/schemas/OcrReadBackConfigurationDto",
            "IXLA.Box.Automapper.ChipReadBackConfigurationDto": "#/components/schemas/ChipReadBackConfigurationDto",
            "IXLA.Box.Automapper.MagneticReadBackConfigurationDto": "#/components/schemas/MagneticReadBackConfigurationDto"
          }
        }
      },
      "ReadBackType": {
        "enum": [
          "None",
          "Chip",
          "Ocr",
          "Barcode",
          "Magnetic"
        ],
        "type": "string"
      },
      "ReaderAccessType": {
        "enum": [
          "PcScGateway",
          "Ethernet",
          "ExternalUsb"
        ],
        "type": "string"
      },
      "ReaderInterfaceType": {
        "enum": [
          "Contact",
          "Contactless"
        ],
        "type": "string"
      },
      "RectTransformOrigin": {
        "enum": [
          "TopLeft",
          "TopRight",
          "BottomLeft",
          "BottomRight",
          "Center"
        ],
        "type": "string"
      },
      "Rectangle": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RectangleDto": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "dataType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RotateEntitiesDto": {
        "type": "object",
        "properties": {
          "deg": {
            "type": "number",
            "format": "double"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RuntimeMetrics": {
        "type": "object",
        "properties": {
          "runningJobs": {
            "type": "integer",
            "format": "int32"
          },
          "waitingJobs": {
            "type": "integer",
            "format": "int32"
          },
          "completedJobs": {
            "type": "integer",
            "format": "int32"
          },
          "faultedJobs": {
            "type": "integer",
            "format": "int32"
          },
          "averageJobDuration": {
            "type": "integer",
            "format": "int32"
          },
          "jobsPerHour": {
            "type": "integer",
            "format": "int32"
          },
          "frequency": {
            "type": "integer",
            "format": "int32"
          },
          "uptimeSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RuntimeOcrInspectionResult": {
        "type": "object",
        "properties": {
          "inspectionName": {
            "type": "string",
            "nullable": true
          },
          "ocrResult": {
            "$ref": "#/components/schemas/OCRResult"
          }
        },
        "additionalProperties": false
      },
      "SCardConnectParamsDto": {
        "type": "object",
        "properties": {
          "share": {
            "$ref": "#/components/schemas/SCardShare"
          },
          "preferredProtocol": {
            "$ref": "#/components/schemas/SCardProtocol"
          }
        },
        "additionalProperties": false
      },
      "SCardDisconnectParamsDto": {
        "type": "object",
        "properties": {
          "disposition": {
            "$ref": "#/components/schemas/SCardDisposition"
          }
        },
        "additionalProperties": false
      },
      "SCardDisposition": {
        "enum": [
          "LeaveCard",
          "ResetCard",
          "UnpowerCard",
          "EjectCard"
        ],
        "type": "string"
      },
      "SCardEstablishContextParamsDto": {
        "type": "object",
        "properties": {
          "scope": {
            "$ref": "#/components/schemas/SCardScope"
          }
        },
        "additionalProperties": false
      },
      "SCardInitialization": {
        "enum": [
          "LeaveCard",
          "ResetCard",
          "UnpowerCard"
        ],
        "type": "string"
      },
      "SCardProtocol": {
        "enum": [
          "Undefined",
          "T0",
          "T1",
          "Any",
          "Default"
        ],
        "type": "string"
      },
      "SCardReader": {
        "type": "object",
        "properties": {
          "connected": {
            "type": "boolean",
            "readOnly": true
          },
          "readerState": {
            "$ref": "#/components/schemas/SmartCardReaderState"
          },
          "readerName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "readerInterfaceType": {
            "$ref": "#/components/schemas/ReaderInterfaceType"
          }
        },
        "additionalProperties": false
      },
      "SCardReaderState": {
        "enum": [
          "Unaware",
          "Ignore",
          "Changed",
          "Unknown",
          "Unavailable",
          "Empty",
          "Present",
          "AtrMatch",
          "Exclusive",
          "InUse",
          "Mute",
          "Unpowered"
        ],
        "type": "string"
      },
      "SCardReconnectParamsDto": {
        "type": "object",
        "properties": {
          "initialization": {
            "$ref": "#/components/schemas/SCardInitialization"
          },
          "share": {
            "$ref": "#/components/schemas/SCardShare"
          },
          "preferredProtocols": {
            "$ref": "#/components/schemas/SCardProtocol"
          }
        },
        "additionalProperties": false
      },
      "SCardScope": {
        "enum": [
          "User",
          "Terminal",
          "System",
          "Global"
        ],
        "type": "string"
      },
      "SCardShare": {
        "enum": [
          "Exclusive",
          "Shared",
          "Direct"
        ],
        "type": "string"
      },
      "SCardState": {
        "enum": [
          "Unknown",
          "Absent",
          "Present",
          "Swallowed",
          "Powered",
          "Negotiable",
          "Specific"
        ],
        "type": "string"
      },
      "SamLightAxisState": {
        "type": "object",
        "properties": {
          "xInverted": {
            "type": "boolean"
          },
          "yInverted": {
            "type": "boolean"
          },
          "zInverted": {
            "type": "boolean"
          },
          "xyFlipped": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SamLightHeadOpticSettings": {
        "type": "object",
        "properties": {
          "gain": {
            "$ref": "#/components/schemas/Vector2d"
          },
          "offset": {
            "$ref": "#/components/schemas/Vector2d"
          },
          "enabled": {
            "type": "boolean"
          },
          "rotation": {
            "type": "number",
            "format": "double"
          },
          "correctionFilePath": {
            "type": "string",
            "nullable": true
          },
          "axisState": {
            "$ref": "#/components/schemas/SamLightAxisState"
          }
        },
        "additionalProperties": false
      },
      "SamLightOptions": {
        "type": "object",
        "properties": {
          "prefixEntities": {
            "type": "boolean"
          },
          "optic": {
            "$ref": "#/components/schemas/SamlightOpticSettings"
          }
        },
        "additionalProperties": false
      },
      "SamLightOptionsDto": {
        "type": "object",
        "properties": {
          "prefixEntityNames": {
            "type": "boolean",
            "nullable": true
          },
          "optic": {
            "$ref": "#/components/schemas/SamlightOpticSettingsDto"
          }
        },
        "additionalProperties": false
      },
      "SamlightOpticSettings": {
        "type": "object",
        "properties": {
          "applyDefaultOffsets": {
            "type": "boolean"
          },
          "defaultOffsetX": {
            "type": "number",
            "format": "double"
          },
          "defaultOffsetY": {
            "type": "number",
            "format": "double"
          },
          "defaultGainX": {
            "type": "number",
            "format": "double"
          },
          "defaultGainY": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SamlightOpticSettingsDto": {
        "type": "object",
        "properties": {
          "applyDefaultOffsets": {
            "type": "boolean",
            "nullable": true
          },
          "defaultOffsetX": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "defaultOffsetY": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "defaultGainX": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "defaultGainY": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScannerAppStateDto": {
        "type": "object",
        "properties": {
          "entityCount": {
            "type": "integer",
            "format": "int32"
          },
          "isMarking": {
            "type": "boolean"
          },
          "isConnected": {
            "type": "boolean"
          },
          "penSet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PenDto"
            },
            "nullable": true
          },
          "currentJob": {
            "$ref": "#/components/schemas/JobTemplateDto"
          }
        },
        "additionalProperties": false
      },
      "ScannerAppType": {
        "enum": [
          "ScapsSmaLight",
          "VirtualScannerApp"
        ],
        "type": "string"
      },
      "ScannerEntityBitmapModeFlags": {
        "type": "object",
        "properties": {
          "invert": {
            "type": "boolean",
            "nullable": true
          },
          "grayscale": {
            "type": "boolean",
            "nullable": true
          },
          "drillMode": {
            "type": "boolean",
            "nullable": true
          },
          "drillGrayscale": {
            "type": "boolean",
            "nullable": true
          },
          "bidirectional": {
            "type": "boolean",
            "nullable": true
          },
          "startLastLine": {
            "type": "boolean",
            "nullable": true
          },
          "noLineIncrement": {
            "type": "boolean",
            "nullable": true
          },
          "showBitmap": {
            "type": "boolean",
            "nullable": true
          },
          "showScanner": {
            "type": "boolean",
            "nullable": true
          },
          "scanXDir": {
            "type": "boolean",
            "nullable": true
          },
          "penFrequency": {
            "type": "boolean",
            "nullable": true
          },
          "jumpOverBlankPixel": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScannerEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "penId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "markLoopCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "markFlags": {
            "$ref": "#/components/schemas/ScannerEntityMarkFlagsDto"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/EntityType"
          },
          "userData": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "layoutId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "layoutName": {
            "type": "string",
            "nullable": true
          },
          "rotationAngle": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expectedMarkDuration": {
            "type": "string",
            "example": "25:01:01.001"
          },
          "outline": {
            "$ref": "#/components/schemas/DRectangleDto"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "fontName": {
            "type": "string",
            "nullable": true
          },
          "textSize": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "textOrientation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "charSpacing": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "textBaseline": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "textHeightLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "textLengthLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "textRadius": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "textStartAngle": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bitmapModeFlags": {
            "$ref": "#/components/schemas/ScannerEntityBitmapModeFlags"
          },
          "imageIntensity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "imageBrightness": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "imageDitherStep": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hatchPairs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HatchPairDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScannerEntityMarkFlagsDto": {
        "type": "object",
        "properties": {
          "markContour": {
            "type": "boolean",
            "nullable": true
          },
          "markHatch": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScannerMarkGroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "scannerId": {
            "type": "string",
            "description": "The scanner module that will mark entities",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "description": "The target position the support should be in\r\nwhen marking entities",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarkGroupScannerEntityDto"
            },
            "nullable": true
          },
          "expectedMarkDuration": {
            "type": "string",
            "example": "25:01:01.001"
          }
        },
        "additionalProperties": false
      },
      "ScannerModuleDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "baseAddress": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "positionId": {
            "type": "string",
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceDefinition"
            },
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchDataSourceConfigurationResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MySqlDataSourceConfigurationDto"
                },
                {
                  "$ref": "#/components/schemas/NpgSqlDataSourceConfigurationDto"
                }
              ]
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchInkjetLayoutsResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InkjetLayoutDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchJobLayoutsResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobTemplateLayoutDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchJobTemplateLayoutAutoPosSettingsDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchJobTemplatesResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobTemplateDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchJobsResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchLayoutsResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LayoutDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchLogsResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogEntryDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchOcrSettingsResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OcrSettingsDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchParameters": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "sortCriteria": {
            "$ref": "#/components/schemas/SortCriteria"
          }
        },
        "additionalProperties": false
      },
      "SearchTemplateMatchingConfigurationsResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateMatchingConfigurationDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SearchWebhooksTargetsResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhooksTargetDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SelectEntitiesDto": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShowErrorWindowParamsDto": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "nullable": true
          },
          "line3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShowMainWindowParamsDto": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShowResetButtonParamsDto": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "nullable": true
          },
          "line3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SmartCardReaderState": {
        "type": "object",
        "properties": {
          "currentState": {
            "$ref": "#/components/schemas/SCardReaderState"
          },
          "readerName": {
            "type": "string",
            "nullable": true
          },
          "updateCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SortCriteria": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "$ref": "#/components/schemas/SortDirection"
          }
        },
        "additionalProperties": false
      },
      "SortDirection": {
        "enum": [
          "Ascending",
          "Descending"
        ],
        "type": "string"
      },
      "StartRedPointerDto": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Support": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "side": {
            "$ref": "#/components/schemas/SupportSide"
          }
        },
        "additionalProperties": false
      },
      "SupportDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "side": {
            "$ref": "#/components/schemas/SupportSide"
          },
          "entranceTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          }
        },
        "additionalProperties": false
      },
      "SupportSide": {
        "enum": [
          "Unknown",
          "Front",
          "Rear"
        ],
        "type": "string"
      },
      "SystemStatusFlags": {
        "enum": [
          "NoError",
          "TransportAxisError",
          "HeadAxisError",
          "CappingError",
          "UVLampError",
          "FumeExtractorError",
          "HeaterError",
          "UnknownStatus"
        ],
        "type": "string"
      },
      "TaskAllocationBucket": {
        "type": "object",
        "properties": {
          "scannerId": {
            "type": "string",
            "nullable": true
          },
          "supportSide": {
            "type": "string",
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDescriptor"
            },
            "nullable": true,
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TaskDescriptor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "expectedDuration": {
            "type": "number",
            "format": "double"
          },
          "bucket": {
            "$ref": "#/components/schemas/TaskAllocationBucket"
          }
        },
        "additionalProperties": false
      },
      "TemperatureReadingsDto": {
        "type": "object",
        "properties": {
          "printHeadTemperatureCelsius": {
            "type": "number",
            "format": "float"
          },
          "heaterTemperatureCelsius": {
            "type": "number",
            "format": "float"
          },
          "internalTemperatureCelsius": {
            "type": "number",
            "format": "float"
          },
          "board1TemperatureCelsius": {
            "type": "number",
            "format": "float"
          },
          "board2TemperatureCelsius": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "TemperatureStatus": {
        "enum": [
          "None",
          "Warming",
          "Ready",
          "OverTemperature",
          "Error"
        ],
        "type": "string"
      },
      "TemplateMatchingConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scannerId": {
            "type": "string",
            "nullable": true
          },
          "cameraId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "acquisitionPresetName": {
            "type": "string",
            "nullable": true
          },
          "warpPerspective": {
            "type": "boolean"
          },
          "searchArea": {
            "$ref": "#/components/schemas/Rectangle"
          },
          "templateArea": {
            "$ref": "#/components/schemas/Rectangle"
          },
          "searchPatternImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "searchPatternImage": {
            "$ref": "#/components/schemas/ApplicationImage"
          },
          "threshold": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "isConfigured": {
            "type": "boolean",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TemplateMatchingConfigurationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "threshold": {
            "type": "number",
            "format": "double"
          },
          "warpPerspective": {
            "type": "boolean"
          },
          "scannerId": {
            "type": "string",
            "nullable": true
          },
          "cameraId": {
            "type": "string",
            "nullable": true
          },
          "acquisitionPresetName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "searchArea": {
            "$ref": "#/components/schemas/RectangleDto"
          },
          "templateArea": {
            "$ref": "#/components/schemas/RectangleDto"
          },
          "searchPatternImage": {
            "$ref": "#/components/schemas/ApplicationImageDto"
          },
          "isConfigured": {
            "type": "boolean",
            "readOnly": true
          },
          "debugUrl": {
            "type": "string",
            "nullable": true
          },
          "scannerModule": {
            "$ref": "#/components/schemas/ScannerModuleDefinition"
          }
        },
        "additionalProperties": false
      },
      "TestAutoposStartParams": {
        "type": "object",
        "properties": {
          "feeder": {
            "type": "string",
            "nullable": true
          },
          "repetitions": {
            "type": "integer",
            "format": "int32"
          },
          "autoposId": {
            "type": "integer",
            "format": "int32"
          },
          "moveBackPosition": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestMagStripeStartParams": {
        "type": "object",
        "properties": {
          "feeder": {
            "type": "string",
            "nullable": true
          },
          "repetitions": {
            "type": "integer",
            "format": "int32"
          },
          "testType": {
            "$ref": "#/components/schemas/MagStripeTestType"
          },
          "useHiCoercivity": {
            "type": "boolean"
          },
          "track1": {
            "type": "string",
            "nullable": true
          },
          "track2": {
            "type": "string",
            "nullable": true
          },
          "track3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestOcrStartParams": {
        "type": "object",
        "properties": {
          "feeder": {
            "type": "string",
            "nullable": true
          },
          "repetitions": {
            "type": "integer",
            "format": "int32"
          },
          "ocrId": {
            "type": "integer",
            "format": "int32"
          },
          "moveBackPosition": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestTransportStartParams": {
        "type": "object",
        "properties": {
          "positionList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "repetitions": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TransformOptions": {
        "type": "object",
        "properties": {
          "mirrorX": {
            "type": "boolean"
          },
          "mirrorY": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TranslateEntitiesDto": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Translation": {
        "type": "object",
        "properties": {
          "selection": {
            "type": "string",
            "nullable": true
          },
          "offset": {
            "$ref": "#/components/schemas/Vector3d"
          }
        },
        "additionalProperties": false
      },
      "TransportAxisPositionFlags": {
        "enum": [
          "Feed",
          "Load",
          "Laser",
          "Print",
          "Curing",
          "Calib",
          "Exit"
        ],
        "type": "string"
      },
      "TransportConfig": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "serialPorts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "xliType": {
            "type": "string",
            "nullable": true
          },
          "feeders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "slaveId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TransportFeature": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TransportFeatureTypes"
          }
        },
        "additionalProperties": false
      },
      "TransportFeatureTypes": {
        "enum": [
          "SingleFeeder",
          "DoubleFeeder",
          "DoubleFeederOnBoard",
          "SingleFeederOnBoard",
          "MagneticEncoder",
          "SingleChipEncoder",
          "SingleRfiIdEncoder",
          "SingleChipAndRfIdEncoder",
          "MultiChipOnBoard",
          "MultiChipControlBoardLower",
          "MultiChipControlBoardHigher",
          "CliTilt",
          "MliTilt",
          "SingleStacker",
          "DoubleStacker",
          "StackerOnBoard",
          "InkjetPrinter",
          "QualityControl"
        ],
        "type": "string"
      },
      "TransportModuleConfiguration": {
        "type": "object",
        "properties": {
          "moduleId": {
            "type": "integer",
            "format": "int32"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransportFeature"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransportModuleState": {
        "type": "object",
        "properties": {
          "moduleId": {
            "type": "integer",
            "format": "int32"
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "configuration": {
            "$ref": "#/components/schemas/TransportModuleConfiguration"
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/TransportModuleStatus"
          },
          "moduleType": {
            "$ref": "#/components/schemas/TransportModuleType"
          },
          "photoSensors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhotoSensor"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransportModuleStatus": {
        "enum": [
          "Initializing",
          "Ready",
          "Error",
          "WaitingCard",
          "Busy",
          "CardJam",
          "InputTimeout"
        ],
        "type": "string"
      },
      "TransportModuleType": {
        "enum": [
          "MultiEncoder",
          "MagneticStripeEncoder",
          "Transport"
        ],
        "type": "string"
      },
      "TransportPosition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "moduleId": {
            "type": "integer",
            "format": "int32"
          },
          "isAlias": {
            "type": "boolean"
          },
          "realPosition": {
            "type": "string",
            "nullable": true
          },
          "isMachineInput": {
            "type": "boolean"
          },
          "isMachineExit": {
            "type": "boolean"
          },
          "isFeeder": {
            "type": "boolean"
          },
          "isMultiChipExit": {
            "type": "boolean"
          },
          "isTransient": {
            "type": "boolean",
            "readOnly": true
          },
          "isReject": {
            "type": "boolean",
            "readOnly": true
          },
          "occupied": {
            "type": "boolean",
            "readOnly": true
          },
          "currentSupport": {
            "$ref": "#/components/schemas/Support"
          },
          "aliases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransportPosition"
            },
            "nullable": true
          },
          "transportPositionType": {
            "$ref": "#/components/schemas/TransportPositionType"
          },
          "isFlip": {
            "type": "boolean",
            "readOnly": true
          },
          "connections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransportPosition"
            },
            "nullable": true
          },
          "isIntersection": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TransportPositionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "moduleId": {
            "type": "integer",
            "format": "int32"
          },
          "positionName": {
            "type": "string",
            "nullable": true
          },
          "isMachineExit": {
            "type": "boolean"
          },
          "isMachineInput": {
            "type": "boolean"
          },
          "isTransient": {
            "type": "boolean"
          },
          "isReject": {
            "type": "boolean"
          },
          "isFeeder": {
            "type": "boolean"
          },
          "isAlias": {
            "type": "boolean"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "occupied": {
            "type": "boolean"
          },
          "realPosition": {
            "type": "string",
            "nullable": true
          },
          "currentSupport": {
            "$ref": "#/components/schemas/SupportDto"
          },
          "connections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransportPositionType": {
        "enum": [
          "Feeder",
          "Input",
          "Exit",
          "Reject",
          "Work",
          "Park",
          "Transient",
          "Flip"
        ],
        "type": "string"
      },
      "TransportState": {
        "type": "object",
        "properties": {
          "isExecutingCommand": {
            "type": "boolean"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransportModuleState"
            },
            "nullable": true
          },
          "occupiedPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransportPosition"
            },
            "nullable": true
          },
          "feeders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeederState"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransportStatusFlags": {
        "enum": [
          "Motor1On",
          "Motor2On",
          "Motor3On",
          "Motor4On",
          "CardFlipped",
          "Stacker2Error",
          "Feeder2Empty",
          "Feeder2Error",
          "TransportError",
          "Feeder1Empty",
          "Feeder1Error",
          "CardNotFed",
          "FlipError",
          "StackerError",
          "MotorDc1On"
        ],
        "type": "string"
      },
      "UpdateMirroringSettingsRequest": {
        "type": "object",
        "properties": {
          "jobTemplateLayoutId": {
            "type": "integer",
            "format": "int32"
          },
          "mirrorX": {
            "type": "boolean",
            "nullable": true
          },
          "mirrorY": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Vector2d": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Vector3d": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "VersionOptions": {
        "type": "object",
        "properties": {
          "isLatest": {
            "type": "boolean",
            "readOnly": true
          },
          "isLatestOrPublished": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublished": {
            "type": "boolean",
            "readOnly": true
          },
          "isDraft": {
            "type": "boolean",
            "readOnly": true
          },
          "allVersions": {
            "type": "boolean",
            "readOnly": true
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "VoltageReadingsDto": {
        "type": "object",
        "properties": {
          "feedbackVoltage12": {
            "type": "number",
            "format": "float"
          },
          "feedbackVoltage24": {
            "type": "number",
            "format": "float"
          },
          "feedbackVoltage48": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "WebHooksOptions": {
        "type": "object",
        "properties": {
          "ackTimeout": {
            "type": "string",
            "nullable": true,
            "example": "00:00:00.000"
          },
          "executionTimeout": {
            "type": "string",
            "nullable": true,
            "example": "00:00:00.000"
          },
          "maxConnectionRetries": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "useSystemWideWebhooks": {
            "type": "boolean"
          },
          "systemWideWebhookTarget": {
            "type": "string",
            "nullable": true
          },
          "targetUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebhookMessageErrorCode": {
        "enum": [
          "NoErrors",
          "TimeoutError",
          "ConnectionError",
          "ResponseError",
          "GenericError"
        ],
        "type": "string"
      },
      "WebhookReceiverHealthCheckMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "additionalProperties": false,
        "description": "This message is used to test webhooks receiver availability."
      },
      "WebhookTargetTestResultDto": {
        "type": "object",
        "properties": {
          "webhookTargetId": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "$ref": "#/components/schemas/WebhookMessageErrorCode"
          },
          "httpStatusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebhooksTargetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "baseUri": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          }
        },
        "additionalProperties": false
      },
      "WorkflowAction": {
        "enum": [
          "Resume",
          "Reject"
        ],
        "type": "string"
      },
      "WorkflowAuditEntryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "jobTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowId": {
            "type": "string",
            "nullable": true
          },
          "recordId": {
            "type": "integer",
            "format": "int32"
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "nullable": true
          },
          "layoutName": {
            "type": "string",
            "nullable": true
          },
          "ocrName": {
            "type": "string",
            "nullable": true
          },
          "autoposName": {
            "type": "string",
            "nullable": true
          },
          "webhookName": {
            "type": "string",
            "nullable": true
          },
          "sourcePosition": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "nullable": true
          },
          "elapsedMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowBlueprintSummaryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "versionId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "isSingleton": {
            "type": "boolean"
          },
          "isPublished": {
            "type": "boolean"
          },
          "isLatest": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WorkflowBlueprintSummaryModelPagedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowBlueprintSummaryModel"
            },
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkflowCancelledMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "additionalProperties": false
      },
      "WorkflowCompletedMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "additionalProperties": false
      },
      "WorkflowFaultedMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "additionalProperties": false
      },
      "WorkflowInstanceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "definitionId": {
            "type": "string",
            "nullable": true
          },
          "definitionVersionId": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStatus": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "contextType": {
            "type": "string",
            "nullable": true
          },
          "contextId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "lastExecutedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "faultedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "currentActivityId": {
            "type": "string",
            "nullable": true
          },
          "lastExecutedActivityId": {
            "type": "string",
            "nullable": true
          },
          "currentActivityName": {
            "type": "string",
            "nullable": true
          },
          "lastExecutedActivityName": {
            "type": "string",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowInstanceDtoPagedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowInstanceDto"
            },
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkflowInstanceStateChangedEventArgs": {
        "type": "object",
        "properties": {
          "workflowInstanceId": {
            "type": "string",
            "nullable": true
          },
          "executingActivityId": {
            "type": "string",
            "nullable": true
          },
          "executingActivityName": {
            "type": "string",
            "nullable": true
          },
          "lastExecutedActivityId": {
            "type": "string",
            "nullable": true
          },
          "lastExecutedActivityName": {
            "type": "string",
            "nullable": true
          },
          "supportId": {
            "type": "string",
            "nullable": true
          },
          "currentPositionId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          }
        },
        "additionalProperties": false
      },
      "WorkflowInstanceSummaryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "definitionId": {
            "type": "string",
            "nullable": true
          },
          "definitionVersionId": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStatus": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "contextType": {
            "type": "string",
            "nullable": true
          },
          "contextId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "lastExecutedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "faultedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2019-12-10T10:06:50.466318Z"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowMessage": {
        "required": [
          "discriminator"
        ],
        "type": "object",
        "properties": {
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "sourceJobInstanceId": {
            "type": "string",
            "nullable": true
          },
          "machineName": {
            "type": "string",
            "nullable": true
          },
          "machineSerial": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "jobId": {
            "type": "string",
            "nullable": true
          },
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "messageId": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceId": {
            "type": "string",
            "nullable": true
          },
          "workflowInstanceName": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "$ref": "#/components/schemas/MessageType"
          },
          "jobStatus": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "errorCode": {
            "$ref": "#/components/schemas/JobErrorCodes"
          },
          "additionalMetadata": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "documentProduced": {
            "type": "boolean"
          },
          "destructiveOperationExecuted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "discriminator",
          "mapping": {
            "IXLA.Box.Services.Workflow.Messaging.Signals.WebhookReceiverHealthCheckMessage": "#/components/schemas/WebhookReceiverHealthCheckMessage",
            "IXLA.Box.Services.Workflow.Messaging.Signals.WorkflowSchedulerStartedMessage": "#/components/schemas/WorkflowSchedulerStartedMessage",
            "IXLA.Box.Services.Workflow.Messaging.Signals.WorkflowSchedulerProcessSuspendedMessage": "#/components/schemas/WorkflowSchedulerProcessSuspendedMessage",
            "IXLA.Box.Services.Workflow.Messaging.Signals.WorkflowSchedulerStoppedMessage": "#/components/schemas/WorkflowSchedulerStoppedMessage",
            "IXLA.Box.Services.Workflow.Messaging.Signals.WorkflowStartedMessage": "#/components/schemas/WorkflowStartedMessage",
            "IXLA.Box.Services.Workflow.Messaging.Signals.WorkflowCancelledMessage": "#/components/schemas/WorkflowCancelledMessage",
            "IXLA.Box.Services.Workflow.Messaging.Signals.WorkflowCompletedMessage": "#/components/schemas/WorkflowCompletedMessage",
            "IXLA.Box.Services.Workflow.Messaging.Signals.WorkflowFaultedMessage": "#/components/schemas/WorkflowFaultedMessage",
            "IXLA.Box.Services.Workflow.Messaging.Signals.EncoderLoadedMessage": "#/components/schemas/EncoderLoadedMessage",
            "IXLA.Box.Services.Workflow.Messaging.Signals.OcrExecutedMessage": "#/components/schemas/OcrExecutedMessage",
            "IXLA.Box.Services.Workflow.Messaging.Signals.FeederEmptyMessage": "#/components/schemas/FeederEmptyMessage"
          }
        }
      },
      "WorkflowSchedulerErrorCodes": {
        "enum": [
          "JobTemplateDoesNotExists",
          "InvalidDataSourceConfiguration",
          "WebhooksServerUnreachable",
          "TransportResetFailed",
          "FeederEmpty",
          "InvalidWorkflowTypeName"
        ],
        "type": "string"
      },
      "WorkflowSchedulerProcessSuspendedMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "additionalProperties": false
      },
      "WorkflowSchedulerStartedMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "additionalProperties": false
      },
      "WorkflowSchedulerStartupParamsDto": {
        "type": "object",
        "properties": {
          "rejectedCardsThreshold": {
            "type": "number",
            "format": "float"
          },
          "workflowTypeName": {
            "type": "string",
            "nullable": true
          },
          "jobTemplateName": {
            "type": "string",
            "nullable": true
          },
          "stopAfter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dryRun": {
            "type": "boolean",
            "nullable": true
          },
          "taskAllocationStrategy": {
            "type": "string",
            "nullable": true
          },
          "noReset": {
            "type": "boolean",
            "nullable": true
          },
          "disableRedPointer": {
            "type": "boolean",
            "nullable": true
          },
          "skipEntityUpdates": {
            "type": "boolean",
            "nullable": true
          },
          "metadataFields": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "filterJobsBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowSchedulerStateDto": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowSchedulerStatus"
          },
          "stopReason": {
            "$ref": "#/components/schemas/WorkflowSchedulerStopReason"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowSchedulerErrorCodes"
            },
            "nullable": true
          },
          "stopSourceJobId": {
            "type": "string",
            "nullable": true
          },
          "queueSize": {
            "type": "integer",
            "format": "int32"
          },
          "queuedOrderIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "nullable": true
          },
          "lastLoadedItemId": {
            "type": "integer",
            "format": "int32"
          },
          "upTimeSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "currentJobTemplateName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "currentJobTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "workflowTypeName": {
            "type": "string",
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowSchedulerStatus": {
        "enum": [
          "Starting",
          "Running",
          "Waiting",
          "Error",
          "Stopping",
          "Stopped",
          "FeederEmpty",
          "JobQueueEmpty"
        ],
        "type": "string"
      },
      "WorkflowSchedulerStopReason": {
        "enum": [
          "BatchCompleted",
          "FeederEmpty",
          "ManualStop",
          "CardJam",
          "UnhandledException",
          "WebhooksServerUnreachable",
          "InvalidDataSourceConfiguration",
          "TransportResetFailed"
        ],
        "type": "string"
      },
      "WorkflowSchedulerStoppedMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "properties": {
          "stopReason": {
            "$ref": "#/components/schemas/WorkflowSchedulerStopReason"
          }
        },
        "additionalProperties": false
      },
      "WorkflowStartedMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowMessage"
          }
        ],
        "additionalProperties": false
      },
      "WorkflowStatus": {
        "enum": [
          "Idle",
          "Running",
          "Finished",
          "Suspended",
          "Faulted",
          "Cancelled"
        ],
        "type": "string"
      },
      "XPrintDoorStatus": {
        "enum": [
          "AllClosed",
          "FrontRight",
          "FrontLeft",
          "RearRight",
          "RearLeft",
          "ExternalInterlockLatched",
          "ExternalInterlock"
        ],
        "type": "string"
      },
      "XPrintTransportStatus": {
        "enum": [
          "Ready",
          "FeederEmpty",
          "Jam",
          "PassportDestinationFull",
          "EmergencyStop",
          "Unknown",
          "Busy"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}